<?php

/**
 * Created by wplaat (Plaatsoft)
 *
 * This software is open source and may be copied, distributed or modified under the terms of the GNU General Public License (GPL) Version 2
 *
 * For more information visit the following website.
 * Website : http://www.plaatsoft.nl 
 *
 * Or send an email to the following address.
 * Email   : info@plaatsoft.nl
 */

// Addressbook module URLs
define('URL_FAMILY_LIST',  'addressbook/family/list');
define('URL_FAMILY_VIEW',  'addressbook/family/view');
define('URL_FAMILY_EDIT',  'addressbook/family/edit');
define('URL_MEMBER_LIST',  'addressbook/member/list');
define('URL_MEMBER_VIEW',  'addressbook/member/view');
define('URL_MEMBER_EDIT',  'addressbook/member/edit');
define('URL_PICTURE_VIEW', 'addressbook/picture/view');
define('URL_PICTURE_EDIT', 'addressbook/picture/edit');
define('URL_UPLOAD_CSV',   'addressbook/csv/upload');
define('URL_DOWNLOAD_CSV', 'addressbook/csv/download');
define('URL_SEARCH',       'addressbook/search');
define('URL_MAP_VIEW',     'addressbook/map/view');
define('URL_EMAIL',        'addressbook/email');

define('IMAGE_DIR',        file_directory_path().'/addressbook');
define('THUMBNAILS_DIR',   file_directory_path().'/addressbook/thumbnails');

/**
 * help hook()
 * @return help texts
 */
function addressbook_help($section) {

  $output = '';
  switch ($section) {
    case 'admin/modules#description':
      $output .= t('Addressbook module');
      break;
  }
  return $output;
}

/**
 * menu hook()
 * @return array of menu items
 */
function addressbook_menu() {

  $items = array();

  $items[] = array('path' => URL_FAMILY_LIST,
                   'title' => t('Addressbook family list'),
                   'callback' => 'family_list',
                   'access' => user_access('view addressbook'),
                   'type' => MENU_CALLBACK);

  $items[] = array('path' => URL_FAMILY_VIEW,
                   'title' => t('Addressbook view family'),
                   'callback' => 'family_view2',
                   'access' => user_access('view addressbook'),
                   'type' => MENU_CALLBACK);

  $items[] = array('path' => URL_FAMILY_EDIT,
                   'title' => t('Addressbook edit family'),
                   'callback' => 'family_edit',
                   'access' => user_access('add address'),
                   'type' => MENU_CALLBACK);

  $items[] = array('path' => URL_MEMBER_LIST,
                   'title' => t('Addressbook family list'),
                   'callback' => 'member_list',
                   'access' => user_access('view addressbook'),
                   'type' => MENU_CALLBACK);

  $items[] = array('path' => URL_MEMBER_VIEW,
                   'title' => t('Addressbook view family member'),
                   'callback' => 'member_view',
                   'access' => user_access('view addressbook'),
                   'type' => MENU_CALLBACK);

  $items[] = array('path' => URL_MEMBER_EDIT,
                   'title' => t('Addressbook edit family member'),
                   'callback' => 'member_edit',
                   'access' => user_access('add address'),
                   'type' => MENU_CALLBACK);

  $items[] = array('path' => URL_PICTURE_VIEW,
                   'title' => t('Addressbook view picture'),
                   'callback' => 'picture_view',
                   'access' => user_access('view addressbook'),
                   'type' => MENU_CALLBACK);

  $items[] = array('path' => URL_PICTURE_EDIT,
                   'title' => t('Addressbook edit picture'),
                   'callback' => 'picture_edit',
                   'access' => user_access('add address'),
                   'type' => MENU_CALLBACK);

  $items[] = array('path' => URL_UPLOAD_CSV,
                   'title' => t('Addressbook CSV upload'),
                   'callback' => 'upload_csv',
                   'access' => user_access('add address'),
                   'type' => MENU_CALLBACK);

  $items[] = array('path' => URL_DOWNLOAD_CSV,
                   'title' => t('Addressbook CSV download'),
                   'callback' => 'download_csv',
                   'access' => user_access('add address'),
                   'type' => MENU_CALLBACK);

   $items[] = array('path' => URL_SEARCH,
                   'title' => t('Addressbook search'),
                   'callback' => 'general_search',
                   'access' => user_access('view addressbook'),
                   'type' => MENU_CALLBACK);

   $items[] = array('path' => URL_MAP_VIEW,
                   'title' => t('Addressbook map view'),
                   'callback' => 'map_view',
                   'access' => user_access('view addressbook'),
                   'type' => MENU_CALLBACK);

   $items[] = array('path' => URL_EMAIL,
                   'title' => t('Addressbook email view'),
                   'callback' => 'email_view',
                   'access' => user_access('add address'),
                   'type' => MENU_CALLBACK);

   $items[] = array('path' => 'admin/settings/addressbook',
                   'title' => t('Addressbook'),
                   'description' => t('Settings of addressbook.'),
                   'callback' => 'drupal_get_form',
                   'callback arguments' => array('addressbook_settings'),
                   'access' => user_access('administer site configuration'),
                   'type' => MENU_NORMAL_ITEM);

  return $items;
}

/**
  * Valid permisions for this module
  * @return array an array of valid permission for the module
  */
function addressbook_perm() {

  return array('view addressbook','add address');
}

/**
 * Module configuration settings
 * @return settings HTML or deny access
 */
function addressbook_settings() {

  //only administrators can access this module
  if (!user_access('access administration pages')) {
    return drupal_access_denied();
  }

  $form['settings_general'] = array('#type' => 'fieldset', '#title' => t('General settings'));

  $form['settings_general']['addressbook_name_format'] = array(
     '#type' => 'select',
     '#title' => t('Name format '),
     '#default_value' => variable_get('addressbook_name_format',1),
     '#options' => array( 0 => t('middle last, first'), 1 => t('first middle last') ),
     '#description' => t('Set with name format with will be used in the general addressbook list page.'));

  $form['settings_general']['addressbook_show_sort_bar'] = array(
     '#type' => 'select',
     '#title' => t('Enable sort bar'),
     '#default_value' => variable_get('addressbook_show_sort_bar',1),
     '#options' => array( 0 => t('No'), 1 => t('Yes') ),
     '#description' => t('Enable / Disable sort bart in general addressbook list page.'));

  $form['settings_general']['addressbook_roles'] = array(
     '#type' => 'textarea',
     '#title' => t('Roles'),
     '#default_value' => variable_get('addressbook_roles', ''),
     '#rows' => 1,
     '#description' => t("Enter roles with a person can have (Seperated items with commas. No space allowed).") );

  $form['settings_general']['addressbook_country'] = array(
     '#type' => 'textfield',
     '#title' => t('Country'),
     '#default_value' => variable_get('addressbook_country', t('Nederland')),
     '#description' => t("Specify default country for new address items."),
     '#maxlength' => '50',
     '#size' => '50');

  $form['settings_general']['addressbook_show_thumbnails'] = array(
     '#type' => 'select',
     '#title' => t('Show thumbnails pictures in list views'),
     '#default_value' => variable_get('addressbook_show_thumbnails',0),
     '#options' => array( 0 => t('No'), 1 => t('Yes') ),
     '#description' => t('Enable / Disable thumbnails pictures in family list and family member list.'));

  $form['settings_general']['addressbook_email_manitory'] = array(
     '#type' => 'select',
     '#title' => t('Email field manitory'),
     '#default_value' => variable_get('addressbook_email_manitory',1),
     '#options' => array( 0 => t('No'), 1 => t('Yes') ),
     '#description' => t('Enable / Disable email field as manitory field.'));

  $form['settings_general']['addressbook_wiki_edit_mode'] = array(
     '#type' => 'select',
     '#title' => t('Wiki edit mode'),
     '#default_value' => variable_get('addressbook_wiki_edit_mode',0),
     '#options' => array( 0 => t('Disable'), 1 => t('Enable') ),
     '#description' => t('Enable (Every one can modify existing addresses), Disable (Only owner can modify created addresses).'));



  $form['map24'] = array('#type' => 'fieldset', '#title' => t('Map settings'));

  $form['map24']['addressbook_map_link'] = array(
     '#type' => 'select',
     '#title' => t('Activate map link'),
     '#default_value' => variable_get('addressbook_map_link',0),
     '#options' => array( 0 => t('No'), 1 => t('Yes') ),
     '#description' => t('Enable / Disable Activate www.map24.com fast link.'));

  $form['map24']['addressbook_map_key'] = array(
     '#type' => 'textfield',
     '#title' => t('Free www.map24.com access key'),
     '#default_value' => variable_get('addressbook_map_key', ''),
     '#description' => t("Enter access key (Visit http://www.map24.com to get a free key)"),
     '#maxlength' => '50',
     '#size' => '50');



  $form['birthday'] = array('#type' => 'fieldset', '#title' => t('Birthday notification settings'));

  $form['birthday']['addressbook_birthday_notification'] = array(
     '#type' => 'select',
     '#title' => t('Birthday email notification'),
     '#default_value' => variable_get('addressbook_birthday_notification',0),
     '#options' => array( 0 => t('No'), 1 => t('Yes') ),
     '#description' => t('Enable / Disable email birthday notification.'));

  $form['birthday']['addressbook_birthday_subject'] = array(
     '#type' => 'textfield',
     '#title' => t('Subject of birtday e-mail'),
     '#default_value' => variable_get('addressbook_birthday_subject','Happy birthday %username from %site_name'),
     '#maxlength' => 180,
     '#description' => t('Customize the subject of your birthday e-mail, which is sent to members upon there birtday.') .' '. t('Available variables are:') .' %username, %site_name');

  $form['birthday']['addressbook_birthday_body'] = array(
     '#type' => 'textarea',
     '#title' => t('Body of birthday e-mail'),
     '#default_value' => variable_get('addressbook_birthday_body',"Dear %username,\r\n\r\nCongratulation with your %user_age ste birthday.\r\nHave a nice day!\r\n"),
     '#rows' => 15,
     '#description' => t('Customize the body of the birtday e-mail, which is sent to members upon there birtday.') .' '. t('Available variables are:') .' %username, %user_age, %site_name');

  return system_settings_form($form);

}

/**
  * Find all family member with are celebrating there birth_day to day and send a email.
  * @return emails
  */
function addressbook_cron() {

  // If birthday notification is enabled check all family members.
  if ( variable_get('addressbook_birthday_notification',0)==1 ) {

    // Send only one time the birthday notications per day (crontab runs every hour)
    $current_day=date('-m-d');
    $current_time=date('H');

    if ($current_time==0)
    {
      watchdog('cron', t('Addressbook birthday cron'));

      // Fetch all members with are celebrating there birtday
      $query='SELECT first_name, middle_name, last_name, email, birth_day FROM {addressbook_member} WHERE birth_day LIKE "%'.$current_day.'"';
      $queryResult = db_query($query);
      while ($data = db_fetch_object($queryResult)) 
      {

        $username=view_name($data->first_name,$data->middle_name,$data->last_name,true);

        $email = $data->email;
        $site_name = variable_get('site_name', 'Drupal');

        // Calculate member age
        list($year, $month, $day) = split('[/.-]', $data->birth_day);
        $user_age  = date('Y')-$year;

        // if family member have a email address send a email
        if (($email!='') && ($user_age<100))
        {
          $from=$site_name.'<'.variable_get('site_mail', ini_get('sendmail_from')).'>';

          $subject=variable_get('addressbook_birthday_subject','Happy birthday %username from %site_name');
          $subject = str_replace("%username", $username, $subject);
          $subject = str_replace("%site_name", $site_name, $subject);

          $message=variable_get('addressbook_birthday_body',"Dear %username,\r\n\r\nCongratulation with your %user_age ste birthday.\r\nHave a nice day!\r\n");
          $message = str_replace("%username", $username, $message);
          $message = str_replace("%user_age", $user_age, $message);
          $message = str_replace("%site_name", $site_name, $message);

	    if ( drupal_mail( "addressbook", $email, $subject, $message, $from))
	    {
             watchdog('cron', t('Sent birthday email to ').$email);
          }
          else 
          {
            watchdog('cron', t('Unable to email to ').$email);
          }
        }
      }
    }
  }
}

/**
  * Find all family member with are celebrating there birth_day to day and make a block of it.
  * @return emails
  */
function addressbook_block($op='list', $delta=0) {

  // listing of blocks, such as on the admin/block page
  if ($op == "list") {

    $block[0]["info"] = t('Birthday today');
    return $block;

  } else if ($op == 'view') {

    // our block content
    // content variable that will be returned for display
    $block_content = '';

    if (user_access('view addressbook')) {
      $current_day=date('-m-d');
      $current_time=date('H');

      $query='SELECT mid, first_name, middle_name, last_name, email, birth_day FROM {addressbook_member} WHERE birth_day LIKE "%'.$current_day.'"';
      $queryResult = db_query($query);
      while ($data = db_fetch_object($queryResult)) {

        // Calculate member age
        list($year, $month, $day) = split('[/.-]', $data->birth_day);
        $user_age  = date('Y')-$year;

        $name=view_name($data->first_name,$data->middle_name,$data->last_name,true,false,true);
        $block_content .= l( $name.' ['.$user_age.'] ',URL_MEMBER_VIEW.'/'.$data->mid) . '<br />';
      }
    }

    // check to see if there was any content before setting up the block
    if ($block_content == '') {
        // no content from a week ago, return nothing.
        return;
    }
    // set up the block
    $block['subject'] = 'Birthday today';
    $block['content'] = $block_content;
    return $block;
  }
}

/*
 * View name in formatted style
 * @ first_name
 * @ middle_name
 * @ last_name
 * @ short
 * @ return name formatted in HTML
 */
function view_name($first_name,$middle_name,$last_name,$short) {

  if ($short) {
    $tmp=split(" ", $first_name);
    $i=0;
    $first_name='';
    while ($tmp[$i]!='')
    {
       $first_name.=ucfirst($tmp[$i++][0]).'.';
    }
  }

  if ( variable_get('addressbook_name_format',1)=='1')
  {
    $name = $first_name . ' ' . $middle_name . ' ' . $last_name;
  }
  else
  {
    $name = $middle_name . ' ' . $last_name. ', ' . $first_name;
  }
  return $name;
}


/*
 * View birthday field
 * @ birthday_day
 * @ birthday_month
 * @ birthday_year
 * @ return HTML
 */
function view_birthday($birthday_day,$birthday_month,$birthday_year,$readonly) {

   global $user;

   $page.='<tr><td valign="top" width=15%>';
   $page.=t('Birth Day');
   $page.='</td><td>';

   if ( $readonly == '0' ) {
     $page.='<select name="birthday_day">';
     for ($i=1; $i<32; $i++)
     {
        $page.='<option value="'.$i.'" ';
        if ($birthday_day==$i) $page.='selected="selected" ';
        $page.='>'.$i.'</option>';
     }
     $page.='</select> ';

     $month=array("",t('January'),t('February'),t('March'),t('April'),t('May'),
       t('June'),t('July'),t('August'),t('September'),t('October'),t('November'),t('December'));

     $page.='<select name="birthday_month">';
     for ($i=1; $i<13; $i++)
     {
        $page.='<option value="'.$i.'" ';
        if ($birthday_month==$i) $page.='selected="selected" ';
        $page.='>'.$month[$i].'</option>';
     }
     $page.='</select> ';

     if ( $readonly == '0' )
     {
       $current_year=date('Y');
       $page.='<select name="birthday_year">';
       for ($i=1900; $i<=$current_year; $i++) {
         $page.='<option value="'.$i.'" ';
         if ($birthday_year==$i) $page.='selected="selected" ';
         $page.='>'.$i.'</option>';
       }
       $page.='</select> ';
     }
   }
   else {
     $birtday .= $birthday_day.'-'.$birthday_month.'-'.$birthday_year;
     $page .= '<input id="text" name="birthday" size="10" type="text" value="'.$birtday.'" READONLY />';
   }

   $page.='</td></tr>';
   return $page;
}

/*
 * View Owner field (Only administrator can change owner field)
 * @ owner
 * @ return HTML
 */
function view_owner($uid, $readonly) {

   global $user;

   $page.='<tr><td valign="top" width=15%>';
   $page.=t('Owner');
   $page.='</td><td>';

   if ( $readonly=='0' ) {
     $query  = 'SELECT uid, name FROM {users}';
     $queryResult = db_query($query);

     // Workarround Drupal first entry in users table is always empty. Skip this entry
     $tmp = db_fetch_object($queryResult);

     $page.='<select name="owner">';
     while ($tmp = db_fetch_object($queryResult)) {
        $page.='<option value="'.$tmp->uid.'" ';
        if ($tmp->uid==$uid) $page.='selected="selected" ';
        $page.='>'.$tmp->name.'</option>';
     }
     $page.='<option value="'.t('No owner').'" ';
     if ($uid==0) $page.='selected="selected" ';
     $page.='>'.t('No owner').'</option>';
     $page.='</select>';
   }
   else {
     if ($uid==0) {
       $page .= '<input id="text" name="owner" size="20" maxlength="20" type="text" value="'.t('No owner').'" READONLY />';
     } else
     {
       $query  = 'SELECT uid, name FROM {users} WHERE uid='.$uid;
       $queryResult = db_query($query);
       $tmp = db_fetch_object($queryResult);

       $page .= '<input id="text" name="owner" size="20" maxlength="20" type="text" value="'.$tmp->name.'" READONLY />';
     }
   }
   $page.='</td></tr>';
   return $page;
}

/**
 * Roles
 * This function will show all roles storing in the setting page.
 * @return HTML
 */
function view_roles($active_roles,$wanted_roles,$readonly) {

   global $user;
   $page='';

   $roles=split( ",", variable_get('addressbook_roles',''));
   if ($roles[0]=='')
   {
      // No roles defined in setting page. return directly!
      return $page;
   }

   if (($readonly=='1') && ($active_roles=='') && ($wanted_roles=='')) {
      // Nothing to show
      return $page;
   }

   if ( $readonly=='0' ) {
     $page .= '<br/>';
     $page .= '<b>'.t('Please enter the roles you currently forfilling and please enter the roles you are now or in the near future interesed in!').'</b><br/>';
     $page .= '<br/>';
   }

   $page .= '<table border=0 width=100% cellpadding=1>';
   $page .='<tr>';
   $page .='<td valign="top" width=15%>';
   $page .=t('Active Roles').'&nbsp;';
   $page .='</td><td width=35%>';

   $first=1;
   $i=0;
   if ( $readonly=='0' ) {
     while ($roles[$i]!='') {

       if ( !strstr( $active_roles, $roles[$i] ) ) {
          $page.='<input type="checkbox" name="active_'.trim($roles[$i]).'">'.$roles[$i].'<br/>';
       }
       else {
         $page.='<input type="checkbox" name="active_'.trim($roles[$i]).'" CHECKED>'.$roles[$i].'<br/>';
       }
       $i++;
     }
   }
   else {
     while ($roles[$i]!='') {
       if ( strstr( $active_roles, $roles[$i] ) ) {
         $page.='<input type="checkbox" name="active_'.trim($roles[$i]).'" CHECKED DISABLED>'.$roles[$i];
         $page.='</input>';
         $page.='<br/>';
       }
       $i++;
     }
   }

   $page.='</td>';
   $page.='<td valign="top" width=15%>';
   $page.=t('Interesing Roles').'&nbsp;';
   $page.='</td>';
   $page.='<td width=35%>';

   $first=1;
   $i=0;
   if ( $readonly=='0' ) {
     while ($roles[$i]!='') {

       if ( !strstr( $wanted_roles, $roles[$i] ) ) {
          $page.='<input type="checkbox" name="wanted_'.trim($roles[$i]).'">'.$roles[$i].'<br/>';
       }
       else {
         $page.='<input type="checkbox" name="wanted_'.trim($roles[$i]).'" CHECKED>'.$roles[$i].'<br/>';
       }
       $i++;
     }
   }
   else {
     while ($roles[$i]!='') {
       if ( strstr( $wanted_roles, $roles[$i] ) ) {
         $page.='<input type="checkbox" name="wanted_'.trim($roles[$i]).'" CHECKED DISABLED>'.$roles[$i];
         $page.='</input>';
         $page.='<br/>';
       }
       $i++;
     }
   }

   $page.='</td>';
   $page.='</tr>';
   $page.='</table>';
   return $page;
}


/**
 * View Country
 * This function will show all available countries.
 * @return HTML
 */
function view_country($country, $readonly) {

   $page='';

   $page.='<tr><td valign="top">';
   $page.=t('Country');
   $page.='</td><td>';

   if ($readonly=='0') {
     $countries=array( 'Afghanistan','Albania', 'Algeria', 'American Samoa', 'Andorra', 'Angola', 'Anguilla',
      'Antigua and Barbuda', 'Argentina', 'Armenia',  'Ascension Island', 'Australia','Austria',
      'Azerbaijan', 'Bahamas', 'Bahrain',  'Bangladesh',   'Barbados',  'Belarus',  'Belgium',
      'Belize',  'Benin',    'Bermuda',    'Bhutan',    'Bolivia',    'Bosnia and Herzegovina',
      'Botswana',    'Brazil',    'British Indian Ocean Territory',    'Brunei Darussalam',
      'Bulgaria',    'Burkina Faso',    'Burundi',    'Camaroon',    'Cambodia',    'Cameroon',
      'Canada',    'Cape Verde',    'Cayman Islands',    'Central African Republic',    'Chad',
      'Chile',    'China',    'Colombia',    'Comoros',    'Congo',    'Cook Islands',    'Costa Rica',
      'Cote D Ivoire',    'Croatia',    'Cuba',    'Cyprus',    'Czech Republic',    'Denmark',    'Djibouti',
      'Dominica',    'Dominican Republic',    'Ecuador',    'Egypt',    'El Salvador',    'Equatorial Guinea',
      'Eritrea',    'Estonia',    'Ethiopia',    'Falkland Islands',    'Faroe Islands',    'Federated States of Micronesia',
      'Fiji',    'Finland',    'France',    'French Guiana',    'French Polynesia',    'Gabon',   'Georgia',
      'Germany',    'Ghana',    'Greece',    'Greenland',    'Grenada',    'Guadeloupe',    'Guatemala',
      'Guam',    'Guinea',    'Guinea Bissau',    'Guyana',    'Haiti',    'Honduras',    'Hungary',
      'Iceland',    'India',    'Indonesia',    'Iran',    'Ireland',    'Isle of Man',    'Israel',
      'Italy',    'Jamaica',    'Japan',    'Jordan',    'Kazakhstan',    'Kenya',    'Kiribati',    'Korea',
      'Kuwait',    'Kyrgyzstan',    'Laos',    'Latvia',    'Lebanon',    'Lesotho',    'Liberia',
      'Libya',    'Liechtenstein',    'Lithuania',    'Luxembourg',    'Macau',    'Macedonia',
      'Madagascar',    'Malawi',    'Malaysia',    'Maldives',    'Mali',    'Malta',    'Marshall Islands',
      'Martinique',    'Mauritius',    'Mayotte',    'Mexico',    'Moldova',    'Monaco',    'Mongolia',
      'Montenegro',    'Montserrat',    'Morocco',    'Mozambique',    'Myanmar',    'Namibia',
      'Nauru',    'Nepal',    'Nederland',    'Netherlands Antilles',    'New Caledonia',    'New Zealand',
      'Nicaragua',    'Niger',    'Nigeria',    'Niue',    'Norfolk Island',    'Northern Mariana Islands',
      'Norway',    'Oman',    'Pakistan',    'Palau',    'Panama',    'Papua New Guinea',    'Paraguay',
      'Peru',    'Philippines',    'Pitcairn',    'Poland',    'Portugal',    'Puerto Rico',    'Qatar',
      'Reunion',    'Romania',    'Russian Federation',    'Rwanda',    'Saint Vincent and the Grenadines',
      'San Marino',    'Sao Tome and Principe',    'Saudi Arabia',    'Senegal',    'Serbia',    'Seychelles',
      'Sierra Leone',    'Singapore',    'Slovakia',    'Slovenia',    'Solomon Islands',    'Somalia',
      'South Africa',    'South Georgia',    'Spain',    'Sri Lanka',    'St. Kitts and Nevis',    'St. Lucia',
      'St. Pierre and Miquelon',    'Sudan',    'Suriname',    'Swaziland',    'Sweden',
      'Switzerland',    'Syrian Arab Republic',    'Taiwan',    'Tajikistan',    'Tanzania',
      'Thailand',    'The Gambia',    'Togo',    'Tokelau',    'Tonga',    'Trinidad and Tobago',
      'Tunisia',    'Turkey',    'Turkmenistan',    'Turks and Caicos Islands',    'Tuvalu',
      'Uganda',    'Ukraine',    'United Arab Emirates',    'United Kingdom',    'United States',
      'Uruguay',    'Uzbekistan',    'Vanuatu',    'Venezuela',    'Viet Nam',    'Virgin Islands',
      'Western Samoa',    'Yemen',    'Yugoslavia',    'Zaire',    'Zambia',    'Zimbabwe');

      $page .='<select name="country">';
      for ($i=1; $i<213; $i++) {
         $page.='<option value="'.$countries[$i].'" ';
         if ($country==$countries[$i]) $page.='selected="selected" ';
         $page.='>'.$countries[$i].'</option>';
      }
      $page.='</select> ';
   }
   else {
     $page .= '<input id="text" name="contry" size="50" maxlength="50" type="text" value="'.$country.'" READONLY />';
   }
   $page.='</td>';
   $page.='</tr>';
   return $page;
}

/*
 * Function fill table line
 * @return HTML
 */
function view_line($first,$second) {

   $page .= "<tr><td valign='top' width=15%>".$first."</td><td>".$second."</td></tr>\r\n";
   return $page;
}

/*
 * Function valid email address
 * @return true or false
 */
function check_mail($adres) {

   return ! ereg("[A-Za-z0-9_-]+([\.]{1}[A-Za-z0-9_-]+)*@[A-Za-z0-9-]+([\.]{1}[A-Za-z0-9-]+)+",$adres);
}

/*
 * Function valid number imput
 * @returns true if valid number (only numeric string), false if not
 */
function check_number($str) {

  if (ereg('^[[:digit:]]+$', $str))
    return true;
  else
    return false;
}

/*
 * Function check user access
 * @returns true if access is allowed else false 
 */
function check_access($uid) {

  global $user;
  if ( ( (  ($user->uid==$uid) || 
            ($uid==0) ||  
            (variable_get('addressbook_wiki_edit_mode',0)==1)
         ) 
         && user_access('add address')
        ) 
        || user_access('access administration pages') 
     ) 
  {
    return true;
  }
  else
  {
    return false;
  }
}

/*
 * Function valid alfanumeric imput
 * @returns true if valid number (only alfanumeric string), false if not
 */
function hacker_warning() {

  //watchdog('user', 'Addressbook hacking attempt');
  $page .= '<br/>';
  $page .= '<h1>'.t('System Warning').'</h1>';
  $page .= t('Input is not valid! Please do not modify the URL manually').'<br/>';
  $page .= t('This hacking attemp is recorded!').'<br/>';
  $page .= '<br/>';
  $page .= '<form action="'.url(URL_FAMILY_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
  $page .= '<input type="submit" value="'.t('Return').'" />';
  $page .= '</form>';
  $page .= '</div>';
  print theme("page", $page);
}

/*
 * insert family SQL function
 * @return true of false
 */
function insert_family($middle_name, $last_name, $street, $zipcode, $city, $country, $telephone, $owner) {

  $query  = 'INSERT INTO addressbook_family (middle_name, last_name, street, zipcode, city, ';
  $query .= 'country, telephone, uid, last_updated) VALUES (';
  $query .= '"'.$middle_name.'",';
  $query .= '"'.$last_name.'",';
  $query .= '"'.$street.'",';
  $query .= '"'.$zipcode.'",';
  $query .= '"'.$city.'",';
  $query .= '"'.$country.'",';
  $query .= '"'.$telephone.'",';
  $query .= '"'.$owner.'",';
  $query .= 'SYSDATE() )';

  $result = db_query($query);
  if ($result==1) {
    // Query succesfull
    watchdog('user', 'A family is created in the addressbook');
    return true;
  }
  else {
    // Query failed
     return false;
  }
}

/*
 * update family SQL function
 * @return true of false
 */
function update_family( $middle_name, $last_name, $street, $zipcode, $city, $country, $telephone, $owner, $fid) {

  $query = 'UPDATE addressbook_family SET ';
  $query .= 'middle_name = "'.$middle_name.'",';
  $query .= 'last_name = "'.$last_name.'",';
  $query .= 'street = "'.$street.'",';
  $query .= 'zipcode = "'.$zipcode.'",';
  $query .= 'city = "'.$city.'",';
  $query .= 'country = "'.$country.'",';
  $query .= 'telephone = "'.$telephone.'",';
  $query .= 'uid = "'.$owner.'",';
  $query .= 'last_updated = SYSDATE() ';
  $query .= 'WHERE fid='.$fid;

  $result = db_query($query);
  if ($result==1) {
    // Query succesfull
    watchdog('user', 'Family '.$fid.' is updated in addressbook');
    return true;
  }
  else {
    // Query failed
    return false;
  }
}

/*
 * insert member SQL function
 * @return true of false
 */
function insert_member( $first_name, $middle_name, $last_name, $birth_day, $mobile, $email, $notes, $work, $active_roles, $wanted_roles, $fid, $owner ) {

  $query  = 'INSERT INTO addressbook_member (first_name, middle_name, last_name, ';
  $query .= 'birth_day, mobile, email, notes, work, active_roles, wanted_roles, uid, fid, last_updated) VALUES (';
  $query .= '"'.$first_name.'",';
  $query .= '"'.$middle_name.'",';
  $query .= '"'.$last_name.'",';
  $query .= '"'.$birth_day.'",';
  $query .= '"'.$mobile.'",';
  $query .= '"'.$email.'",';
  $query .= '"'.$notes.'",';
  $query .= '"'.$work.'",';
  $query .= '"'.$active_roles.'",';
  $query .= '"'.$wanted_roles.'",';
  $query .= '"'.$owner.'",';
  $query .= '"'.$fid.'",';
  $query .= 'SYSDATE() )';

  $result = db_query($query);
  if ($result==1) {
    // Query succesfull
    watchdog('user', 'A member is created in the addressbook');
    return true;
  }
  else {
    // Query failed
    return false;
  }
}


/*
 * update member SQl function
 * @return true of false
 */
function update_member($first_name, $middle_name, $last_name, $birth_day, $mobile, $email, $notes, $work, $active_roles, $wanted_roles, $owner, $fid, $mid) {

  $query = 'UPDATE addressbook_member SET ';
  $query .= 'first_name = "'.$first_name.'",';
  $query .= 'middle_name = "'.$middle_name.'",';
  $query .= 'last_name = "'.$last_name.'",';
  $query .= 'birth_day = "'.$birth_day.'",';
  $query .= 'mobile = "'.$mobile.'",';
  $query .= 'email = "'.$email.'",';
  $query .= 'notes = "'.$notes.'",';
  $query .= 'work = "'.$work.'",';
  $query .= 'uid = "'.$owner.'",';
  $query .= 'fid = "'.$fid.'",';
  $query .= 'active_roles = "'.$active_roles.'",';
  $query .= 'wanted_roles = "'.$wanted_roles.'",';
  $query .= 'uid = "'.$owner.'",';
  $query .= 'last_updated = SYSDATE() WHERE mid='.$mid;

  $result = db_query($query);
  if ($result==1) {
    // Query succesfull
    watchdog('user', 'Member '.$mid.' is updated in addressbook');
    return true;
  }
  else {
    // Query failed
    return false;
  }
}

/*
 * Function shows all family in a list form
 * @return HTML
 */
function family_list( $sort='', $search='') {

  global $user;
  $page = '<div class="addressbook">';

  drupal_set_title(t('Addressbook family list'));

  // Validate HTTP URL parameter
  if ( strlen($sort)>1 )
  {
     return hacker_warning();
  }

  // Get search value out session scope
  $search=$_SESSION["search"];

  // Set sort value in session scope
  $_SESSION["sort"]=$sort;

  // Set list in session scope
  $_SESSION["list"]='family';

  $page .= '<br/>';
  $page .= '<table border=0 >';
  $page .= '<tr>';

  $page .= '<td >';
  $page .= '<form action="'.url(URL_SEARCH).'" method="POST">';
  $page .= '<input id="text" name="search" size="65" maxlength="65" type="text" value="'.$search.'" ';
  //$page .= '</td>';
  //$page .= '<td ALIGN="left">';
  $page .= '<input type="submit" value="'.t('Search').'" />';
  $page .= '</form>';
  $page .= '</td>';

  $page .= '<td ALIGN="right">';
  $page .= '<form action="'.url(URL_MEMBER_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
  $page .= '<input type="submit" value="'.t('Go to family member list').'" />';
  $page .= '</form>';
  $page .= '</td></tr>';
  //$page .= '</table>';

  // Show sort bar (if enable in settings)
  //$page .= '<br/>';

  //$page .= '<table border=0 >';
  $page .= '<tr>';
  if ( variable_get('addressbook_show_sort_bar',1)=='1') {
    $page .= '<td ALIGN="left">';
    $sort_bar=array("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P",
     "Q","R","S","T","U","V","W","X","Y","Z");
    if ($sort=='') $page .= '<B>';
    $page .= '<a href="'.url(URL_FAMILY_LIST).'">'.t('ALL').'</a>|';
    if ($sort=='') $page .= '</B>';
    for ($i=0; $i<26; $i++)
    {
       if ($sort==$sort_bar[$i]) $page .= '<B>';
       $page .= '<a href="'.url(URL_FAMILY_LIST.'/'.$sort_bar[$i]).'">'.$sort_bar[$i].'</a>|';
       if ($sort==$sort_bar[$i]) $page .= '</B>';
    }
    $page .= '</td>';
  }


  if ( user_access('add address')) 
  {
    $page .= '<td ALIGN="right">';
    $page .= '<form action="'.url(URL_FAMILY_EDIT.'/0').'" method="POST">';
    $page .= '<input type="submit" value="'.t('New Family').'" />';
    $page .= '</form>';
    $page .= '</td>';
  }
  $page .= '</tr>';
  $page .= '</table>';

  // Query Database
  $query  = 'SELECT fid, middle_name, last_name, street, zipcode, city, uid ';
  $query .= 'FROM {addressbook_family} WHERE LAST_NAME LIKE "'.$sort.'%" ';
  $query .= 'ORDER BY LAST_NAME, MIDDLE_NAME';
  $queryResult = db_query($query);

  //$page .= '<br/>';
  $page .= '<table width=100% border="1" cellpadding="3" cellspacing="3">';

  // Show Banner
  $page .= '<tr><td>';
  if ( variable_get('addressbook_show_thumbnails',0)==1) {
      $page .= '<b>'.t('Picture').'<b>';
      $page .= '</td><td>';
  }

  $page .= '<b>'.t('Name').'</b>';
  $page .= '</td><td>';
  $page .= '<b>'.t('Street').'</b>';
  $page .= '</td><td>';
  $page .= '<b>'.t('Zipcode').'</b>';
  $page .= '</td><td>';
  $page .= '<b>'.t('City').'</b>';
  $page .= '</td></tr>';

  // Show all found address
  $page_tmp='';
  while ($data = db_fetch_object($queryResult))
  {

  $page_tmp .= '<tr><td width=60>';

   if ( variable_get('addressbook_show_thumbnails',0)==1) {

      // Query sort found pictures on birtday
      $query2 = 'SELECT picture FROM {addressbook_picture} WHERE fid="'.$data->fid.'" AND mid="0"';
      $queryResult2 = db_query($query2);
      if ($tmp = db_fetch_object($queryResult2)) {
        // Show first picture with is found
        $page_tmp .= '<a href="'.url(URL_FAMILY_VIEW.'/'.$data->fid).'">';
        $filename=url(THUMBNAILS_DIR.'/'.$tmp->picture);
        $filename=str_replace(array("?q="), "", $filename);
        $page_tmp .='<img src="'.$filename.'" width=60 height=50/></a>';
      }
     $page_tmp .= '</td><td>';
    }


    // Format Name
    if ( variable_get('addressbook_name_format',1)=='1')
    {
       $name = $data->middle_name.' '.$data->last_name;
    }
    else
    {
       $name = $data->last_name.', '.$data->middle_name;
    }
    $page_tmp .= l($name, URL_FAMILY_VIEW.'/'.$data->fid);

    $page_tmp .= '</td><td>';
    $page_tmp .= $data->street;
    $page_tmp .= '</td><td>';
    $page_tmp .= $data->zipcode;
    $page_tmp .= '</td><td>';
    $page_tmp .= $data->city;
    $page_tmp .= '</td></tr>';
  }

  if ( $page_tmp!='') {
     // Show Content
     $page .= $page_tmp;
  }
  else {
    // No content found
    $page .= '<tr><td>';
    $page .= t('No records found');
    $page .= '</td><td>';
    $page .= '</td><td>';
    $page .= '</td><td>';
    $page .= '</td></tr>';
  }
  $page .= '</table>';

   // Only administrators can access the csv upload functionaly
  if (user_access('access administration pages')) {
     //$page .= '<br/>';
     $page .= '<table border="0" width="100%">';
     $page .= '<tr>';
     $page .= '<td ALIGN="left">';
     $page .= '<form action="'.url(URL_UPLOAD_CSV).'" method="POST">';
     $page .= '<input type="submit" value="'.t('Upload CSV file').'" />';
     $page .= '</form>';
     $page .= '</td>';

     $page .= '<td ALIGN="right">';
     $page .= '<form action="'.url(URL_DOWNLOAD_CSV).'" method="POST">';
     $page .= '<input type="submit" value="'.t('Download CSV file').'" />';
     $page .= '</form>';
     $page .= '</td>';
     $page .= '</tr>';
     $page .= '</table>';
  }
  $page .= '</div>';

  print theme("page", $page);
}

/**
 * Render a page showing the selected family in detail
 * @return HTML
 */
function family_view2( $fid=0 )  {

  global $user;
  $page = '<div class="addressbook">';

  drupal_set_title(t('Addressbook family view') );

  // Validate HTTP URL parameter
  if ( !check_number($fid) )
  {
     return hacker_warning();
  }

  // Save fid in session scope
  $_SESSION["fid"]=$fid;

  // Clear mid in session scope
  $_SESSION["mid"]=0;

  // Debugging value
  $border=0;

  $query  = 'SELECT fid, middle_name, last_name, street, zipcode, city, country, telephone, uid ';
  $query .= 'FROM {addressbook_family} WHERE FID='.$fid;
  $queryResult = db_query($query);
  $tmp = db_fetch_object($queryResult);

  // If no data is found. Show anti hacking message
  if ($tmp==null) {
    return hacker_warning();
  }

  $middle_name=$tmp->middle_name;
  $last_name=$tmp->last_name;
  $street=$tmp->street;
  $zipcode=$tmp->zipcode;
  $city=$tmp->city;
  $country=$tmp->country;
  $telephone=$tmp->telephone;
  $uid=$tmp->uid;

  // Show address information in readonly mode
  $page .= '<br/>';

  $page .= '<table width="100%" cellpadding="1" >';

  $page .= '<tr><td valign="top">';
  $page .= '<b>'.$middle_name.' '.$last_name.'</b><br/>';
  $page .= $street.'<br/>';
  $page .= $zipcode.'&nbsp;&nbsp;'.$city.'<br/>';
  $page .= $country.'<br/>';
  $page .= $telephone.'<br/>';
  $page .= '</td>';

  // Query Database for Pictures
  $query  = 'SELECT pid, picture ';
  $query .= 'FROM {addressbook_picture} WHERE fid="'.$fid.'" AND mid="'.$mid.'"';
  $queryResult = db_query($query);
  $picture_found=0;
  while ($data = db_fetch_object($queryResult))
  {
    // Show each picture with is found
    $picture_found++;
    $page .= '<td valign="top">';
    $page .= '<a href="'.url(URL_PICTURE_VIEW.'/'.$data->pid).'" >';
    $filename=url(THUMBNAILS_DIR.'/'.$data->picture);
    $filename=str_replace(array("?q="), "", $filename);
    $page .= '<img align="right" src="'.$filename.'" />';
    $page .= '</td>';
  }
  $page .= '</tr>';
  $page .= '</table>';

  // Query Family Members
  $query  = 'SELECT mid, first_name, middle_name, last_name, birth_day, mobile, email, uid ';
  $query .= 'FROM {addressbook_member} WHERE fid='.$fid.' ';
  $query .= 'ORDER BY birth_day';
  $queryResult = db_query($query);

  $page .= '<br/>';
  $page .= '<table width=100% cellpadding=1>';

  // Show Banner
  $page .= '<tr><td>';
  if (user_access('access administration pages')) 
  {
     $page .= '<b>'.t('Id').'</b>';
     $page .= '</td><td>';
  }

  if ( variable_get('addressbook_show_thumbnails',0)==1 ) 
  {
     $page .= '<b>'.t('Picture').'</b>';
     $page .= '</td><td>';
  }
  $page .= '<b>'.t('Name').'</b>';
  $page .= '</td><td>';
  $page .= '<b>'.t('Birth day').'</b>';
  $page .= '</td><td>';
  $page .= '<b>'.t('Mobile').'</b>';
  $page .= '</td><td>';
  $page .= '<b>'.t('Email').'</b>';
  $page .= '</td></tr>';

  // Show all found members
  while ($data = db_fetch_object($queryResult))
  {

     $page .= '<tr><td width=25>';

     if (user_access('access administration pages')) 
     {
        $page .= $data->mid;
        $page .= '</td><td>';
     }

     if ( variable_get('addressbook_show_thumbnails',0)==1 ) 
     {
      $query2  = 'SELECT pid, picture FROM {addressbook_picture} WHERE fid="'.$fid.'" AND mid="'.$data->mid.'"';
      $queryResult2 = db_query($query2);
      $tmp = db_fetch_object($queryResult2);

      if ($tmp!=null) 
      {
        // Show each picture with is found
        if ( check_access($data->uid) ) 
        {
           $page .= '<a href="'.url(URL_MEMBER_EDIT.'/').$data->mid.'">';
        }
        else 
        {
           $page .= '<a href="'.url(URL_MEMBER_VIEW.'/').$data->mid.'">';
        }
        $filename=url(THUMBNAILS_DIR.'/'.$tmp->picture);
        $filename=str_replace(array("?q="), "", $filename);
        $page .= '<img src="'.$filename.'" width=25 height=30/></a>';
        $page .= '</td><td>';
      }
      else 
      {
        $page .= '</td><td>';
      }
     }

    $name=view_name($data->first_name,$data->middle_name,$data->last_name,true);
    if ( check_access( $data->uid ))
    {
       $page .= l($name,URL_MEMBER_EDIT.'/'.$data->mid);
    }
    else {
      $page .= l($name,URL_MEMBER_VIEW.'/'.$data->mid);
    }
    $page .= '</td><td>';
    list($year, $month, $day) = split('[/.-]', $data->birth_day);
    $page .= $day.'-'.$month.'-'.$year;

    $page .= '</td><td>';
    $page .= $data->mobile;
    $page .= '</td><td>';
    $page .= l($data->email,'mailto:'.$data->email);
    $page .= '</td></tr>';
  }

  $page .= '</table>';
  $page .= '<br/>';

  // Navigation Bar
  $page .= '<table border="0" >';
  $page .= '<tr>';

  if (check_access($uid)) {

    $page .= '<td align="left">';
    $page .= '<form action="'.url(URL_FAMILY_EDIT.'/').$fid.'" method="POST">';
    $page .= '<input type="submit" value="'.t('Edit Family').'" />';
    $page .= '</form>';
    $page .= '</td>';

    $page .= '<td align="left">';
    $page .= '<form action="'.url(URL_MEMBER_EDIT.'/0').'" method="POST">';
    $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
    $page .= '<input type="submit" value="'.t('Add member').'" />';
    $page .= '</form>';
    $page .= '</td>';

    // Maximum three pictures allowed
    if ($picture_found<3)
    {
      $page .= '<td align="left">';
      $page .= '<form action="'.url(URL_PICTURE_EDIT.'/0').'" method="POST">';
      $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
      $page .= '<input type="submit" value="'.t('Add Picture').'" />';
      $page .= '</form>';
      $page .= '</td>';
    }
  }

  if (variable_get('addressbook_map_link',0)==1) {
    $page .= '<td align="left">';
    $page .= '<form action="'.url(URL_MAP_VIEW).'" method="POST">';
    $page .= '<input type="hidden" name="street" value="'.$street.'" />';
    $page .= '<input type="hidden" name="city" value="'.$city.'" />';
    $page .= '<input type="hidden" name="country" value="'.$country.'" />';
    $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
    $page .= '<input type="submit" value="'.t('Go to Map').'" />';
    $page .= '</form>';
    $page .= '</td>';
  }

  $page .= '<td align="left">';
  $page .= '<form action="'.url(URL_FAMILY_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
  $page .= '<input type="submit" value="'.t('Return').'" />';
  $page .= '</form>';
  $page .= '</td>';

  $page .= '</tr>';
  $page .= '</table>';
  //$page .= '<br/>';
  //$page .= '<br/>';

  $page .= '</div>';
  print theme("page", $page);
}

/**
 * Render a page showing the selected family in detail
 * @return HTML
 */
function family_edit($fid=0)  {

  global $user;
  $page = '<div class="addressbook">';

  if ($fid==0) {
     drupal_set_title(t('Addressbook create new family'));
  }
  else {
     drupal_set_title(t('Addressbook edit family'));
  }

  // Validate HTTP URL parameter
  if ( !check_number($fid) )
  {
     return hacker_warning();
  }

  // Save fid in session scope
  $_SESSION["fid"]=$fid;
  // Clear mid in session scope
  $_SESSION["mid"]=0;

  // Check access rights
  if ( $fid != 0 ) 
  {
     // If not a new family is created, check entry access rights
     $query  = 'SELECT uid FROM {addressbook_family} WHERE fid='.$fid;
     $queryResult = db_query($query);
     $tmp = db_fetch_object($queryResult);

     if ( !check_access($tmp->uid) ) 
     {
       // Deny access, no more clues.
       // Everything will be in the watchdog's URL for the administrator to check.
       drupal_access_denied();
       return;
     }
  }

  // Fetch data from HTTP request
  $commit = isset($_POST['commit']) ? '1' : '0';
  $family_delete = isset($_POST['family_delete']) ? '1' : '0';
  $go_delete = isset($_POST['go_delete']) ? '1' : '0';

  $middle_name=htmlentities($_POST['middle_name']);
  $last_name=htmlentities(ucfirst($_POST['last_name']));
  $street=htmlentities(ucfirst($_POST['street']));
  $zipcode=htmlentities($_POST['zipcode']);
  $city=htmlentities(ucfirst($_POST['city']));
  $country=htmlentities($_POST['country']);
  if ($country=='') $country=variable_get('addressbook_country', 'Nederland');
  $telephone=htmlentities($_POST['telephone']);
  $owner=htmlentities($_POST['owner']);

  // Delete are you sure form
  if (($family_delete=='1') && ($fid!='0') && ($go_delete=='0')) {
    $page .= '<br/>';
    $page .= t('Are you sure you want to delete this family?');
    $page .= '<br/>';
    $page .= '<br/>';
    $page .= '<table align="left">';
    $page .= '<tr><td>';
    $page .= '<form action="'.url(URL_FAMILY_EDIT.'/'.$fid).'" method="POST">';
    $page .= '<input type="submit" name="go_delete" value="'.t('Yes').'" />';
    $page .= '<input type="hidden" name="family_delete" />';
    $page .= '</form>';
    $page .= '</td><td>';
    $page .= '<form action="'.url(URL_FAMILY_EDIT.'/'.$fid).'" method="POST">';
    $page .= '<input type="submit" name="cancel_delete" value="'.t('No').'" />';
    $page .= '</form>';
    $page .= '</td></tr>';
    $page .= '</table>';
    $page .= '</div>';
    return $page;
  }

  // Delete selected address in database
  if (($commit=='0') && ($family_delete=='1') && ($fid!='0') && ($go_delete=='1')) {
     $query = 'DELETE FROM {addressbook_family} WHERE fid='.$fid;
     $result = db_query($query);
     if ($result==1)
     {
        // Query succesfull
        watchdog('user', 'Family '.$fid.' is deleted in the addressbook');
        return family_list($_SESSION["sort"]);
     }
     else {
       // Query error
       $page .= '<br/>';
       $page .= t('Failed to deleted the selected family, try again');
       $page .= '<br/>';
       $page .= '<br/>';
       $page .= '<form action="'.url(URL_FAMILY_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
       $page .= '<input type="submit" value="'.t('Return').'" />';
       $page .= '</form>';
       $page .= '</div>';
       return $page;
     }
  }

  // Insert new family in database
  if (($commit=='1') && ($family_delete=='0') && ($fid == '0')) {
    $error=0;

    // Valid input.
    if ($last_name=='') $error=1;
    if ($street=='') $error=1;
    if ($zipcode=='') $error=1;
    if ($city=='') $error=1;

    if ($error=='0') {
       if (($owner==0) && !user_access('access administration pages')) {
         // Set new owner because items did not found owner yet!)
         $owner=$user->uid;
       }

       if (insert_family($middle_name, $last_name, $street, $zipcode, $city, $country, $telephone, $owner))
       {
         // Query succesfull
         return family_list($_SESSION["sort"]);
       }
       else
       {
         // Query error
         $page .= '<br/>';
         $page .= t('Failed to create a new family, try again!');
         $page .= '<br/>';
         $page .= '<br/>';
         $page .= '<form action="'.url(URL_FAMILY_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
         $page .= '<input type="submit" value="'.t('Return').'" />';
         $page .= '</form>';
         $page .= '</div>';
         return $page;
       }
    }
  }

  // Update address in database if input in valied
  if (($commit=='1') && ($family_delete=='0') && ($fid != '0')) {
    $error=0;

    // Valid input.
    if ($last_name=='') $error=1;
    if ($street=='') $error=1;
    if ($zipcode=='') $error=1;
    if ($city=='') $error=1;

    if ($error=='0') {

      if (($owner==0) && !user_access('access administration pages')) {
         // Set new owner because items did not found owner yet!)
         $owner=$user->uid;
      }
      if (update_family( $middle_name, $last_name, $street, $zipcode, $city, $country, $telephone, $owner, $fid))
      {
         // Query succesfull
         return family_view2($fid);
      }
      else {
        // Query failed
        $page .= '<br/>';
        $page .= t('Failed to update the family, try again!');
        $page .= '<br/>';
        $page .= '<br/>';
        $page .= '<form action="'.url(URL_FAMILY_VIEW.'/').$fid.'" method="POST">';
        $page .= '<input type="submit" value="'.t('Return').'" />';
        $page .= '</form>';
        $page .= '</div>';
        return $page;
      }
    }
  }

  // Fetch address from database
  if (($fid!='0') && ($commit=='0')) {
    $query  = 'SELECT fid, middle_name, last_name, street, zipcode, city, country, telephone, ';
    $query .= 'last_updated, uid FROM {addressbook_family} WHERE fid='.$fid;
    $queryResult = db_query($query);
    $tmp = db_fetch_object($queryResult);

    // If no data is found. Show anti hacking message
    if ($tmp==null) {
      return hacker_warning();
    }

    $middle_name=$tmp->middle_name;
    $last_name=$tmp->last_name;
    $street=$tmp->street;
    $zipcode=$tmp->zipcode;
    $city=$tmp->city;
    $country=$tmp->country;
    $telephone=$tmp->telephone;
    $owner=$tmp->uid;
    list($year, $time) = split(' ', $tmp->last_updated);
    list($access_year, $access_month, $access_day) = split('[/.-]', $year);
    list($access_hour, $access_minute, $access_sec) = split(':', $time);
    $last_updated=$access_day.'-'.$access_month.'-'.$access_year.' '.$access_hour.':'.$access_minute.':'.$access_sec;
  }

  // Show address information in readonly mode
  $page .= '<br/>';

  $page .= '<form action="'.url(URL_FAMILY_EDIT.'/').$fid.'" method="POST">';
  $page .= '<table cellpadding=2 >';

   if ( user_access('access administration pages') ) {
      // Only administrator can overrule owner information.
     $page .= view_owner($owner,'0');
  }
  else {
     $page .= view_owner($owner,'1');
  }

  $page .= view_line(t('Last updated'),'<input id="text" name="last_updated" size="22" type="text" value="'.$last_updated.'" READONLY />');

  $page .= '<tr><td valign="top">';
  $page .= t('Middle Name');
  $page .= '</td><td>';
  $page .= '<input id="text" name="middle_name" size="10" maxlength="10" type="text" value="'.$middle_name.'"/>';
  $page .= '</td></tr>';

  $page .= '<tr><td valign="top">';
  $page .= t('Last Name*');
  $page .= '</td><td>';
  $page .= '<input id="text" name="last_name" size="35" maxlength="35" type="text" value="'.$last_name.'" ';
  if (($last_name=='') && ($commit=='1')) $page .= 'class="form-text required error" />'; else $page .= '/>';
  $page .= '</td></tr>';

  $page .= '<tr><td valign="top">';
  $page .= t('Street*');
  $page .= '</td><td>';
  $page .= '<input id="text" name="street" size="50" maxlength="50" type="text" value="'.$street.'" ';
  if (($street=='') && ($commit=='1')) $page .= 'class="form-text required error" />'; else $page .= '/>';
  $page .= '</td></tr>';

  $page .= '<tr><td valign="top">';
  $page .= t('Zipcode*');
  $page .= '</td><td>';
  $page .= '<input id="text" name="zipcode" size="8" maxlength="8" type="text" value="'.$zipcode.'" ';
  if (($zipcode=='') && ($commit=='1')) $page .= 'class="form-text required error" />'; else $page .= '/>';
  $page .= '</td></tr>';

  $page .= '<tr><td valign="top">';
  $page .= t('City*');
  $page .= '</td><td>';
  $page .= '<input id="text" name="city" size="50" maxlength="50" type="text" value="'.$city.'" ';
  if (($city=='') && ($commit=='1')) $page .= 'class="form-text required error" />'; else $page .= '/>';
  $page .= '</td></tr>';

  $page .= view_country($country, '0');

  $page .= '<tr><td valign="top">';
  $page .= t('Telephone');
  $page .= '</td><td>';
  $page .= '<input id="text" name="telephone" size="16" maxlength="16" type="text" value="'.$telephone.'" />';
  $page .= '</td></tr>';

  $page .= '</table>';

  $page .= '<br/>';
  $page .= t('* Marked fields are mandatory!').'<br/>';

   // Show menu Bar
  $page .= '<br/>';
  $page .= '<table align="left">';
  $page .= '<tr>';

  $page .= '<td valign="top">';
  $page .= '<tr><td valign="top">';
  $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
  $page .= '<input type="submit" name="commit" value="'.t('Commit').'" />';
  $page .= '</form>';
  $page .= '</td>';

  if ($fid!='0') {
    // Only exiting families can be be deleted
    $page .= '<td valign="top">';
    $page .= '<form action="'.url(URL_FAMILY_EDIT.'/').$fid.'" method="POST">';
    $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
    $page .= '<input type="submit" name="family_delete" value="'.t('Delete').'" />';
    $page .= '</form>';
    $page .= '</td>';
  }

  // Cancel new created address
  $page .= '<td valign="top">';
  if ($fid!='0') {
     $page .= '<form action="'.url(URL_FAMILY_VIEW.'/').$fid.'" method="POST">';
  } else
  {
     $page .= '<form action="'.url(URL_FAMILY_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
  }
  $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
  $page .= '<input type="submit" value="'.t('Cancel').'" />';
  $page .= '</form>';
  $page .= '</td>';

  $page .= '</tr>';
  $page .= '</table>';

  $page .= '<br/>';
  $page .= '<br/>';

  $page .= '</div>';
  print theme("page", $page);
}

/**
 * Render a page showing the selected address for editing
 * @return HTML
 */
function member_list( $sort='' )  {

  global $user;
  $page = '<div class="addressbook">';

  drupal_set_title(t('Addressbook family member list') );

  // Validate HTTP URL parameter
  if ( strlen($sort)>1 )
  {
     return hacker_warning();
  }

  $_SESSION["sort"]=$sort;

  // Save list name in session scope
  $_SESSION["list"]='member';

  $role = isset($_POST['roles']) ? $_POST['roles'] : '0';
  if ($role=='0') {
    $role=$_SESSION["role"];
  }
  else {
    $_SESSION["role"]=$role;
  }

  if (isset($_POST['role_type'])) {
    $_SESSION["role_type"]=$_POST['role_type'];
  }

  // Filter on Role
  $i=0;
  $page .= '<br/>';
  $page .= '<table border=0 width=100%>';
  $page .= '<tr>';

  $roles=split( ",", variable_get('addressbook_roles',''));
  if ($roles[0]!='') {
    $page .= '<td>';
    $page .= '<form action="'.url(URL_MEMBER_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
    $page .= '<b>'.t('Filter by role: ').'</b>';

    $page .= '<select name="role_type" >';
    $page .= '<option value=active ';
    if ($_SESSION['role_type']=='active') $page.='selected="selected" ';
    $page.='>'.t('Active').'</option>';
    $page .= '<option value=wanted ';
    if ($_SESSION['role_type']=='wanted') $page.='selected="selected" ';
    $page.='>'.t('Interesed in').'</option>';
    $page .='</select> ';

    $page .= '<select name="roles" value="'.$role.'">';
    $page .='<option value=""></option>';
    while ($roles[$i]!='')
    {
      $page.='<option value="'.$roles[$i].'" ';
      if ($role==$roles[$i]) $page.='selected="selected" ';
      $page.='>'.$roles[$i].'</option>';
      $i++;
    }
    $page .='</select> ';
    $page .= '<input type="submit" value="'.t('Filter').'" />';
    $page .='</form>';
    $page .= '</td>';
  }

  $page .= '<td ALIGN="right">';
  $page .= '<form action="'.url(URL_EMAIL.'/'.$sort).'" method="POST">';
  $page .= '<input type="submit" value="'.t('Send group email').'" />';
  $page .= '</form>';

  $page .= '<td ALIGN="right">';
  $page .= '<form action="'.url(URL_FAMILY_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
  $page .= '<input type="submit" value="'.t('Go to family list').'" />';
  $page .= '</form>';
  $page .= '</td></tr>';
  //$page .= '</table>';

  //$page .= '<br/>';

  // Show sort bar (if enable in settings)
  //$page .= '<table border=0 >';
  $page .= '<tr>';
  if ( variable_get('addressbook_show_sort_bar',1)=='1') {
    $page .= '<td ALIGN="left">';
    $sort_bar=array("A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P",
     "Q","R","S","T","U","V","W","X","Y","Z");
    if ($sort=='') $page .= '<B>';
    $page .= '<a href="'.url(URL_MEMBER_LIST).'">'.t('ALL').'</a>|';
    if ($sort=='') $page .= '</B>';
    for ($i=0; $i<26; $i++)
    {
       if ($sort==$sort_bar[$i]) $page .= '<B>';
       $page .= '<a href="'.url(URL_MEMBER_LIST.'/'.$sort_bar[$i]).'">'.$sort_bar[$i].'</a>|';
       if ($sort==$sort_bar[$i]) $page .= '</B>';
    }
    $page .= '</td>';
  }
  $page .= '</tr>';
  $page .= '</table>';


  // Fetch member from database
  $query  = 'SELECT first_name, middle_name, last_name, mobile, email, mid, fid, uid, ';
  $query .= '(SELECT telephone FROM {addressbook_family} WHERE fid=addressbook_member.fid) telephone ';
  $query .= 'FROM {addressbook_member} ';
  $query .= 'WHERE last_name LIKE "'.$sort.'%" ';
  if ($role!='') {
    if ($_SESSION['role_type']=='active') {
      $query .= 'AND active_roles LIKE "%'.$role.'%" ';
    }
    else {
      $query .= 'AND wanted_roles LIKE "%'.$role.'%" ';
    }
  }
  $query .= 'ORDER BY last_name, middle_name ';
  //$page .= $query;
  $queryResult = db_query($query);

  //$page .= '<br/>';
  $page .= '<table width=100% border=1 cellpadding=3 cellspacing=3>';

  // Show Banner
   // Only administrators can access the csv upload functionaly
  $page .= '<tr><td>';
  if (user_access('access administration pages')) 
  {
     $page .= '<b>'.t('Id').'</b>';
     $page .= '</td><td>';
  }

  if ( variable_get('addressbook_show_thumbnails',0)==1 ) {
     $page .= '<b>'.t('Picture').'</b>';
     $page .= '</td><td>';
  }
  $page .= '<b>'.t('Name').'</b>';
  $page .= '</td><td>';
  $page .= '<b>'.t('Telephone').'</b>';
  $page .= '</td><td>';
  $page .= '<b>'.t('Mobile').'</b>';
  $page .= '</td><td>';
  $page .= '<b>'.t('Email').'</b>';
  $page .= '</td></tr>';

  // Show all found members
  $page_tmp='';
  while ($data = db_fetch_object($queryResult))
  {
     $page_tmp .= '<tr><td width=50>';
     if (user_access('access administration pages')) 
     {
        $page_tmp .= $data->mid;
        $page_tmp .= '</td><td>';
     }

     if ( variable_get('addressbook_show_thumbnails',0)==1) {
      $query2  = 'SELECT pid, picture ';
      $query2 .= 'FROM {addressbook_picture} ';
      $query2 .= 'WHERE fid="'.$data->fid.'" AND mid="'.$data->mid.'"';
      $queryResult2 = db_query($query2);
      $tmp = db_fetch_object($queryResult2);
      if ($tmp!=null) {
        // Show each picture with is found
        if ( check_access($data->uid) ) {
           $page_tmp .= '<a href="'.url(URL_MEMBER_EDIT.'/').$data->mid.'">';
        }
        else {
           $page_tmp .= '<a href="'.url(URL_MEMBER_VIEW.'/').$data->mid.'">';
        }
        $filename=url(THUMBNAILS_DIR.'/'.$tmp->picture);
        $filename=str_replace(array("?q="), "", $filename);
        $page_tmp .='<img src="'.$filename.'" width=50 height=60/></a>';
        $page_tmp .= '</td><td>';
      }
      else {
        $page_tmp .= '</td><td>';
      }
     }

    // Format Name
    $name=view_name($data->first_name,$data->middle_name,$data->last_name,true);
    if ( check_access($data->uid) ) {
      $page_tmp .= l($name, URL_MEMBER_EDIT.'/'.$data->mid);
    }
    else {
      $page_tmp .= l($name, URL_MEMBER_VIEW.'/'.$data->mid);
    }
    $page_tmp .= '</td><td>';
    $page_tmp .= $data->telephone;
    $page_tmp .= '</td><td>';
    $page_tmp .= $data->mobile;
    $page_tmp .= '</td><td>';
    $page_tmp .= l($data->email,'mailto:'.$data->email);
    $page_tmp .= '</td></tr>';
  }

  if ( $page_tmp!='') {
     // Show Content
     $page .= $page_tmp;
  }
  else {
    // No content found
    $page .= '<tr><td>';
    $page .= t('No records found');
    $page .= '</td><td>';
    $page .= '</td><td>';
    $page .= '</td><td>';
    $page .= '</td></tr>';
  }
  $page .= '</table>';

  $page .= '</div>';
  print theme("page", $page);
}

/**
 * Render a page showing the selected member in readonly mode
 * @return HTML
 */
function member_view( $mid=0 )  {

  global $user;
  $page = '<div class="addressbook">';

  drupal_set_title(t('Addressbook view family member') );

  // Validate HTTP URL parameter
  if ( !check_number($mid) )
  {
     return hacker_warning();
  }

  // Save mid in session scope
  $_SESSION["mid"]=$mid;

  //
  // Fetch data from HTTP request
  //

  // Fetch member from database
  $query  = 'SELECT first_name, middle_name, last_name, birth_day, mobile, email, work, notes,';
  $query .= 'active_roles, wanted_roles, uid, fid, last_updated FROM {addressbook_member} ';
  $query .= 'WHERE mid='.$mid;
  $queryResult = db_query($query);
  $tmp = db_fetch_object($queryResult);

  // If no data is found. Show anti hacking message
  if ($tmp==null) {
    return hacker_warning();
  }

  // Fetch family data from database
  $query2  = 'SELECT street, zipcode, city, country, telephone FROM {addressbook_family} ';
  $query2 .= 'WHERE fid='.$tmp->fid;
  $queryResult2 = db_query($query2);
  $data2 = db_fetch_object($queryResult2);

  // If no data is found. Show anti hacking message
  if ($data2==null) {
    return hacker_warning();
  }

  $name=view_name($tmp->first_name,$tmp->middle_name,$tmp->last_name,false);
  list($birthday_year, $birthday_month, $birthday_day) = split('[/.-]', $tmp->birth_day);
  $telephone=$tmp->telephone;
  $mobile=$tmp->mobile;
  $email=$tmp->email;
  $work=$tmp->work;
  $notes=$tmp->notes;
  $active_roles=$tmp->active_roles;
  $wanted_roles=$tmp->wanted_roles;
  $uid=$tmp->uid;
  $fid=$tmp->fid;
  list($year, $time) = split(' ', $tmp->last_updated);
  list($access_year, $access_month, $access_day) = split('[/.-]', $year);
  list($access_hour, $access_minute, $access_sec) = split(':', $time);
  $last_updated=$access_day.'-'.$access_month.'-'.$access_year.' '.$access_hour.':'.$access_minute.':'.$access_sec;

  // View Address Information
  $page .= '<br/>';

  $page .= '<table cellpadding=2 width=100%>';

  // Show this information only to admin users.
  if ( user_access('access administration pages') ) {
     $page .= view_owner($uid,'1');
     $page .= view_line(t('Last updated'),'<input id="text" name="last_updated" size="22" type="text" value="'.$last_updated.'" READONLY />');
  }

  $page .= '<tr><td valign="top" width=15%>';
  $page .= t('Name');
  $page .= '</td><td>';
  $page .= '<input id="text" name="name" size="50" type="text" value="'.$name.'" READONLY />';
  $page .= '</td>';

  // Query Database for Pictures
  $page .= '<td ROWSPAN=9 valign="top">';
  $query  = 'SELECT pid, picture ';
  $query .= 'FROM {addressbook_picture} WHERE fid="'.$fid.'" AND mid="'.$mid.'"';
  $queryResult = db_query($query);
  while ($data = db_fetch_object($queryResult))
  {
    // Show each picture with is found
    $page .= '<a href="'.url(URL_PICTURE_VIEW.'/').$data->pid.'">';
    $filename=url(THUMBNAILS_DIR.'/'.$data->picture);
    $filename=str_replace(array("?q="), "", $filename);
    $page.='<img align="right" src="'.$filename.'"/>';
  }
  $page .= '<tr>';

  $page .= '<tr><td valign="top">';
  $page .= t('Street');
  $page .= '</td><td>';
  $page .= '<input id="text" name="street" size="50" maxlength="50" type="text" value="'.$data2->street.'" READONLY />';
  $page .= '</td></tr>';

  $page .= '<tr><td valign="top">';
  $page .= t('Zipcode');
  $page .= '</td><td>';
  $page .= '<input id="text" name="zipcode" size="8" maxlength="8" type="text" value="'.$data2->zipcode.'" READONLY />';
  $page .= '</td></tr>';

  $page .= '<tr><td valign="top">';
  $page .= t('City');
  $page .= '</td><td>';
  $page .= '<input id="text" name="city" size="50" maxlength="50" type="text" value="'.$data2->city.'" READONLY />';
  $page .= '</td></tr>';

  $page .= view_country($data2->country, '1');

  $page .= '<tr><td valign="top">';
  $page .= t('Telephone');
  $page .= '</td><td>';
  $page .= '<input id="text" name="telephone" size="16" maxlength="16" type="text" value="'.$data2->telephone.'" READONLY />';
  $page .= '</td></tr>';

  $page .= '<tr><td valign="top" width=15%>';
  $page .= t('Mobile');
  $page .= '</td><td>';
  $page .= '<input id="text" name="mobile" size="16" type="text" value="'.$mobile.'" READONLY />';
  $page .= '</td></tr>';

  $page .= '<tr><td valign="top" width=15%>';
  $page .= l(t('Email'),'mailto:'.$email);
  $page .= '</td><td>';
  $page .= '<input id="text" name="email" size="50" type="text" value="'.$email.'" READONLY />';
  $page .= '</td></tr>';

  $page .= view_birthday($birthday_day,$birthday_month,$birthday_year,'1');

  $page .= '<tr><td valign="top" width=15%>';
  $page .= t('Work');
  $page .= '</td><td COLSPAN=2>';
  $page .= '<textarea id="work" cols=55 rows=4 name="work" READONLY >'.$work.'</textarea>';
  $page .= '</td></tr>';

  $page .= '<tr><td valign="top" width=15%>';
  $page .= t('Notes');
  $page .= '</td><td COLSPAN=2>';
  $page .= '<textarea id="notes" cols=55 rows=4 name="notes" READONLY >'.$notes.'</textarea>';
  $page .= '</td></tr>';
  $page .= '</table>';

  $page .= view_roles($active_roles,$wanted_roles, '1');

  // Show menu Bar
  $page .= '<br/>';
  $page .= '<table align="left">';
  $page .= '<tr>';

  if (variable_get('addressbook_map_link',0)==1) {
    $page .= '<td valign="top">';
    $page .= '<form action="'.url(URL_MAP_VIEW).'" method="POST">';
    $page .= '<input type="hidden" name="street" value="'.$data2->street.'" />';
    $page .= '<input type="hidden" name="city" value="'.$data2->city.'" />';
    $page .= '<input type="hidden" name="country" value="'.$data2->country.'" />';
    $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
    $page .= '<input type="hidden" name="mid" value="'.$mid.'" />';
    $page .= '<input type="submit" value="'.t('Go to Map').'" />';
    $page .= '</form>';
    $page .= '</td>';
  }

  $page .= '<td valign="top">';
  if ($_SESSION["list"]=='member') {
     $page .= '<form action="'.url(URL_MEMBER_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
  }
  else {
     $page .= '<form action="'.url(URL_FAMILY_VIEW.'/').$fid.'" method="POST">';
  }
  $page .= '<input type="submit" name="commit" value="'.t('Return').'" />';
  $page .= '</form>';
  $page .= '</td>';


  $page .= '</tr>';
  $page .= '</table>';

  $page .= '<br/>';
  $page .= '<br/>';

  $page .= '</div>';
  print theme("page", $page);
}

function email_view( $sort='') 
{
  global $user;
  $page = '<div class="addressbook">';

  $commit = isset($_POST['commit']) ? '1' : '0';

  $subject=$_POST['subject'];
  $body=$_POST['body'];

  $email='';
  $role=$_SESSION["role"];
  $role_type=$_SESSION["role_type"];
  $query  = "SELECT email from {addressbook_member} WHERE last_name LIKE '".$sort."%'";
  if ($_SESSION['role_type']=='active') 
  {
     $query .= 'AND active_roles LIKE "%'.$role.'%" ';
  }
  else 
  {
     $query .= 'AND wanted_roles LIKE "%'.$role.'%" ';
  }
  $queryResult = db_query($query);
  while ($data = db_fetch_object($queryResult)) 
  {
     if ($data->email != '')
     {
       if ($email == '')
       { 
          $email=trim($data->email);
       }
       else
       {
           $email=$email.', '.trim($data->email);
       }
     }
  }
  
  if ($commit=='0')
  {
     $page .= '<form action="'.url(URL_EMAIL.'/'.$sort).'" method="POST">';
     $page .= '<br/>';
     $page .= t('To:');
     $page .= '<br/>';
     $page .= '<textarea id="email" cols=140 rows=5 maxlength="2000" name="email" WRAP=HARD READONLY>'.$email.'</textarea>';
     $page .= '<br/>';
     $page .= '<br/>';
     $page .= t('Subject:');
     $page .= '<br/>';
     $page .= '<input id="text" name="subject" size="143" maxlength="143" type="text" value="'.$subject.'" />';
     $page .= '<br/>';
     $page .= '<br/>';
     $page .= t('Content:');
     $page .= '<br/>';
     $page .= '<textarea id="body" cols=140 rows=10 maxlength="2000" name="body" >'.$body.'</textarea>';
     $page .= '<br/>';
     $page .= '<br/>';
     $page .= '<table align="left">';
     $page .= '<tr><td>';
     $page .= '<input type="submit" name="commit" value="'.t('Sent').'" />';
     $page .= '</form>';
     $page .= '</td><td>';
     $page .= '<form action="'.url(URL_MEMBER_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
     $page .= '<input type="submit" value="'.t('Cancel').'" />';
     $page .= '</td></tr>';
     $page .= '</form>';
     $page .= '</table>';
  }
  else
  {
     $from=$site_name.'<'.variable_get('site_mail', ini_get('sendmail_from')).'>';

     $page .= '<form action="'.url(URL_MEMBER_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
     $page .= '<br/>';

     if ( drupal_mail( "addressbook", $email, $subject, $body, $from))
     {
        watchdog('Addressbook', t('Sent group email to ').$email);
        $page .= t('Email is sent!');
     }
     else 
     {
        watchdog('Addressbook', t('Unable to email to ').$email);
        $page .= t('Unable to email!');
     }

     $page .= '<br/>';
     $page .= '<br/>';
     $page .= '<input type="submit" name="return" value="'.t('Return').'" />';
  }
  $page .= '</div>';
  print theme("page", $page);
}

/**
 * Render a page showing the selected member in edit mode
 * @return HTML
 */
function member_edit( $mid=0 )  {

  global $user;
  $page = '<div class="addressbook">';

  if ($mid==0) {
     drupal_set_title(t('Addressbook create new family member') );
  }
  else {
     drupal_set_title(t('Addressbook edit family member') );
  }

  // Validate HTTP URL parameter
  if ( !check_number($mid) )
  {
     return hacker_warning();
  }

  // Save mid in session scope
  $_SESSION["mid"]=$mid;

  // get fid from session scope
  $fid=$_SESSION["fid"];
  if ($fid=='')
  {
    // If not in session check HTTP header
    $fid=$_POST['fid'];
  }

  // Fetch data from HTTP request
  $commit = isset($_POST['commit']) ? '1' : '0';
  $member_delete = isset($_POST['member_delete']) ? '1' : '0';
  $go_delete = isset($_POST['go_delete']) ? '1' : '0';

  $uid=$user->uid;
  $birthday_day=htmlentities( $_POST['birthday_day']);
  $birthday_month=htmlentities($_POST['birthday_month']);
  $birthday_year=htmlentities($_POST['birthday_year']);
  $mobile=htmlentities($_POST['mobile']);
  $email=htmlentities($_POST['email']);
  $work=htmlentities($_POST['work']);
  $notes=htmlentities($_POST['notes']);
  $owner=htmlentities($_POST['owner']);
  $first_name=htmlentities(ucfirst($_POST['first_name']));
  $middle_name=htmlentities($_POST['middle_name']);
  $last_name=htmlentities(ucfirst($_POST['last_name']));

  // Fill in some field with default values when new meber is created
  if (($mid=='0') && ($commit=='0')) {
     $query  = 'SELECT middle_name, last_name FROM {addressbook_family} WHERE fid='.$fid;
     $queryResult = db_query($query);
     $tmp = db_fetch_object($queryResult);

     // If no data is found. Show anti hacking message
     if ($tmp==null) {
       return hacker_warning();
     }

     $middle_name=$tmp->middle_name;
     $last_name=$tmp->last_name;

     // If not a new content, check access rights
     $query  = 'SELECT mail FROM {users} WHERE uid='.$user->uid;
     $queryResult = db_query($query);
     $tmp = db_fetch_object($queryResult);
     $email=$tmp->mail;
  }

  /* Fetch all active and wanted roles from the HTTP request */
  $i=0;
  $active_first=1;
  $wanted_first=1;
  $tmp=split( ",", variable_get('addressbook_roles',''));
  while ($tmp[$i]!='') {
    if ($_POST["active_$tmp[$i]"]=='on')
    {
       if ($active_first=='1') {
          $active_roles=$tmp[$i];
          $active_first=0;
       }
       else $active_roles.=';'.$tmp[$i];
    }

    if ($_POST["wanted_$tmp[$i]"]=='on')
    {
       if ($wanted_first=='1') {
          $wanted_roles=$tmp[$i];
          $wanted_first=0;
       }
       else $wanted_roles.=';'.$tmp[$i];
    }
    $i++;
  }

  //
  // Check access rights
  //
  if ( $mid != 0 ) {
     // If not a new content, check access rights
     $query  = 'SELECT uid FROM {addressbook_member} WHERE mid='.$mid;
     $queryResult = db_query($query);
     $tmp = db_fetch_object($queryResult);

     if ( !check_access($tmp->uid)) {
       // Deny access, no more clues.
       // Everything will be in the watchdog's URL for the administrator to check.
       drupal_access_denied();
       return;
     }
  }

  // Delete "are you sure" form
  if (($member_delete=='1') && ($mid!='0') && ($go_delete=='0')) {
    $page .= '<br/>';
    $page .= t('Are you sure you want to delete this family member?');
    $page .= '<br/>';
    $page .= '<br/>';
    $page .= '<table align="left">';
    $page .= '<tr><td>';
    $page .= '<form action="'.url(URL_MEMBER_EDIT.'/'.$mid).'" method="POST">';
    $page .= '<input type="submit" name="go_delete" value="'.t('Yes').'" />';
    $page .= '<input type="hidden" name="member_delete" />';
    $page .= '</form>';
    $page .= '</td><td>';
    $page .= '<form action="'.url(URL_MEMBER_EDIT.'/'.$mid).'" method="POST">';
    $page .= '<input type="submit" name="cancel_delete" value="'.t('No').'" />';
    $page .= '</form>';
    $page .= '</td></tr>';
    $page .= '</table>';
    $page .= '</div>';
    return $page;
  }

  // Delete selected member in database
  if (($commit=='0') && ($member_delete=='1') && ($mid!='0') && ($go_delete=='1')) {
     $query = 'DELETE FROM {addressbook_member} WHERE mid='.$mid;
     $result = db_query($query);
     if ($result==1)
     {
       watchdog('user', 'Address '.$mid.' is deleted in addressbook');
       // Query successfull
       if ($_SESSION["list"]=='member') {
          return member_list($_SESSION["sort"]);
       }
       else {
          return family_view2($fid);
       }
     }
     else {
       // Query failed
       $page .= '<br/>';
       $page .= t('Failed to delete member, try again!');
       $page .= '<br/>';
       $page .= '<br/>';
       if ($_SESSION["list"]=='member') {
          $page .= '<form action="'.url(URL_MEMBER_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
       }
       else {
          $page .= '<form action="'.url(URL_FAMILY_VIEW.'/').$fid.'" method="POST">';
       }
       $page .= '<input type="submit" value="'.t('Return').'" />';
       $page .= '</form>';
       $page .= '</div>';
       return $page;
     }
  }

  // Insert new member in database
  if (($commit=='1') && ($member_delete=='0') && ($mid == '0')) {
    $error=0;

    // Valid input.
    if ($first_name=='') $error=1;
    if ($last_name=='') $error=1;
    if (variable_get('addressbook_email_manitory',1)==1) {
      if (check_mail($email)) $error=1;
    }

    if ($error=='0') {
      $birth_day = $birthday_year.'-'.$birthday_month.'-'.$birthday_day;

      if (($owner==0) && !user_access('access administration pages')) {
         // Set new owner because items did not found owner yet!)
         $owner=$user->uid;
      }

      if (insert_member($first_name, $middle_name, $last_name, $birth_day, $mobile, $email, $notes, $work, $active_roles, $wanted_roles, $fid, $owner)) {
        watchdog('user', 'A address is added in addressbook');
        if ($_SESSION["list"]=='member') {
          return member_list($_SESSION["sort"]);
        }
        else {
          return family_view2($fid);
        }
      }
      else {
        $page .= '<br/>';
        $page .= t('Failed to add member, try again!');
        $page .= '<br/>';
        $page .= '<br/>';
        if ($_SESSION["list"]=='member') {
          $page .= '<form action="'.url(URL_MEMBER_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
        }
        else {
          $page .= '<form action="'.url(URL_FAMILY_VIEW.'/').$fid.'" method="POST">';
        }
        $page .= '<input type="submit" value="'.t('Return').'" />';
        $page .= '</form>';
        $page .= '</div>';
        return $page;
      }
    }
  }

  // Update member in database if input in valid
  if (($commit=='1') && ($member_delete=='0') && ($mid != '0')) {
    $error=0;

    // Valid input.
    if ($first_name=='') $error=1;
    if ($last_name=='') $error=1;
    if (variable_get('addressbook_email_manitory',1)==1) {
      if (check_mail($email)) $error=1;
    }

    if ($error=='0') {
      $birth_day = $birthday_year.'-'.$birthday_month.'-'.$birthday_day;

      if (($owner==0) && !user_access('access administration pages')) {
         // Set new owner because items did not found owner yet!)
         $owner=$user->uid;
      }

      if ( update_member($first_name, $middle_name, $last_name, $birth_day, $mobile, $email, $notes, $work, $active_roles, $wanted_roles, $owner, $fid, $mid) ) {
        if ($_SESSION["list"]=='member') {
          return member_list($_SESSION["sort"]);
        }
        else {
          return family_view2($fid);
        }
      }
      else {
        $page .= '<br/>';
        $page .= t('failed to update member, try again!');
        $page .= '<br/>';
        $page .= '<br/>';
        if ($_SESSION["list"]=='member') {
          $page .= '<form action="'.url(URL_MEMBER_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
        }
        else {
          $page .= '<form action="'.url(URL_FAMILY_VIEW.'/').$fid.'" method="POST">';
        }
        $page .= '<input type="submit" value="'.t('Return').'" />';
        $page .= '</form>';
        $page .= '</div>';
        return $page;
      }
    }
  }

  // Fetch member from database
  if (($mid!='0') && ($commit=='0')) {
     $query  = 'SELECT first_name, middle_name, last_name, ';
     $query .= 'birth_day, mobile, email, work, notes, active_roles, wanted_roles, uid, fid, last_updated FROM {addressbook_member} WHERE mid='.$mid;
     $queryResult = db_query($query);
     $tmp = db_fetch_object($queryResult);

     // If no data is found. Show anti hacking message
     if ($tmp==null) {
       return hacker_warning();
     }

     $first_name=$tmp->first_name;
     $middle_name=$tmp->middle_name;
     $last_name=$tmp->last_name;
     list($birthday_year, $birthday_month, $birthday_day) = split('[/.-]', $tmp->birth_day);
     $telephone=$tmp->telephone;
     $mobile=$tmp->mobile;
     $email=$tmp->email;
     $work=$tmp->work;
     $notes=$tmp->notes;
     $active_roles=$tmp->active_roles;
     $wanted_roles=$tmp->wanted_roles;
     $owner=$tmp->uid;
     $fid=$tmp->fid;

     // Save $fid on session scope. Needed for member list edit.
     $_SESSION["fid"]=$fid;

     list($year, $time) = split(' ', $tmp->last_updated);
     list($access_year, $access_month, $access_day) = split('[/.-]', $year);
     list($access_hour, $access_minute, $access_sec) = split(':', $time);
     $last_updated=$access_day.'-'.$access_month.'-'.$access_year.' '.$access_hour.':'.$access_minute.':'.$access_sec;
  }

  // View Address Information
  $page .= '<br/>';

  $page .= '<form action="'.url(URL_MEMBER_EDIT.'/').$mid.'" method="POST">';
  $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
  $page .= '<table border=0 cellpadding=1 width=100%>';

  if ( user_access('access administration pages') ) {
      // Only administrator can overrule owner information.
     $page .= view_owner($owner,'0');
  }
  else {
     $page .= view_owner($owner,'1');
  }
  $page .= view_line(t('Last updated'),'<input id="text" name="last_updated" size="22" type="text" value="'.$last_updated.'" READONLY />');

  $page .= '<tr><td valign="top" width=15%>';
  $page .= t('First Name*');
  $page .= '</td><td>';
  $page .= '<input id="text" name="first_name" size="35" maxlength="35" type="text" value="'.$first_name.'"';
  if (($first_name=='') && ($commit=='1')) $page .= 'class="form-text required error" />'; else $page .= '/>';
  $page .= '</td>';

  if ($mid!=0)
  {
    // Query Database for Pictures
    $page .= '<td ROWSPAN=9 valign="top">';
    $query  = 'SELECT pid, picture ';
    $query .= 'FROM {addressbook_picture} WHERE fid="'.$fid.'" AND mid="'.$mid.'"';
    $queryResult = db_query($query);
    $picture_found=0;
    while ($data = db_fetch_object($queryResult))
    {
      $picture_found++;

      // Show each picture with is found
      $page .= '<a href="'.url(URL_PICTURE_VIEW.'/').$data->pid.'">';
      $filename=url(THUMBNAILS_DIR.'/'.$data->picture);
      $filename=str_replace(array("?q="), "", $filename);
      $page.='<img align="right" src="'.$filename.'"/>';
    }
  }
  $page .= '<tr>';

  $page .= '<tr><td valign="top">';
  $page .= t('Middle Name');
  $page .= '</td><td>';
  $page .= '<input id="text" name="middle_name" size="10" maxlength="10" type="text" value="'.$middle_name.'" />';
  $page .= '</td></tr>';

  $page .= '<tr><td valign="top">';
  $page .= t('Last Name*');
  $page .= '</td><td>';
  $page .= '<input id="text" name="last_name" size="35" maxlength="35" type="text" value="'.$last_name.'" ';
  if (($last_name='') && ($commit=='1')) $page .= 'class="form-text required error" />'; else $page .= '/>';
  $page .= '</td></tr>';

  $page .= '<tr><td valign="top">';
  $page .= t('Mobile');
  $page .= '</td><td>';
  $page .= '<input id="text" name="mobile" size="16" maxlength="16" type="text" value="'.$mobile.'" />';
  $page .= '</td></tr>';

  $page .= '<tr><td valign="top">';
  $page .= t('Email');
  if (variable_get('addressbook_email_manitory',1)==1) $page .='*';
  $page .= '</td><td>';
  $page .= '<input id="text" name="email" size="50" maxlength="50" type="text" value="'.$email.'" ';
  if (variable_get('addressbook_email_manitory',1)==1) {
    if (check_mail($email) && ($commit=='1')) $page .= 'class="form-text required error" />'; else $page .= '/>';
  }
  $page .= '</td></tr>';

  $page .= view_birthday($birthday_day,$birthday_month,$birthday_year,'0');

  $page .= '<tr><td valign="top">';
  $page .= t('Work');
  $page .= '</td><td COLSPAN=2>';
  $page .= '<textarea id="work" cols=55 rows=4 maxlength="1000" name="work" >'.$work.'</textarea>';
  $page .= '</td></tr>';

  $page .= '<tr><td valign="top">';
  $page .= t('Notes');
  $page .= '</td><td COLSPAN=2>';
  $page .= '<textarea id="notes" cols=55 rows=4 maxlength="1000" name="notes" >'.$notes.'</textarea>';
  $page .= '</td></tr>';
  $page .= '</table>';

  $page .= '<br/>';
  $page .= t('* Marked fields are mandatory!').'<br/>';

  $page .= view_roles($active_roles, $wanted_roles, '0');

  // Show menu Bar
  $page .= '<br/>';
  $page .= '<table align="left">';
  $page .= '<tr>';

  $page .= '<td valign="top">';
  $page .= '<tr><td valign="top">';
  $page .= '<input type="submit" name="commit" value="'.t('Commit').'" />';
  $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
  $page .= '</form>';
  $page .= '</td>';

  if ($mid!='0') {
    // One picture can only be added to a existing member
    if ($picture_found==0) {
      $page .= '<td valign="top">';
      $page .= '<form action="'.url(URL_PICTURE_EDIT.'/').$mid.'" method="POST">';
      $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
      $page .= '<input type="submit" value="'.t('Add Picture').'" />';
      $page .= '</form>';
      $page .= '</td>';
    }

    // Only exiting member can be be deleted
    $page .= '<td valign="top">';
    $page .= '<form action="'.url(URL_MEMBER_EDIT.'/').$mid.'" method="POST">';
    $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
    $page .= '<input type="submit" name="member_delete" value="'.t('Delete').'" />';
    $page .= '</form>';
    $page .= '</td>';
  }

  // Cancel new created member
  $page .= '<td valign="top">';
  if ($_SESSION["list"]=='member') {
     $page .= '<form action="'.url(URL_MEMBER_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
  }
  else {
     $page .= '<form action="'.url(URL_FAMILY_VIEW.'/').$fid.'" method="POST">';
  }
  $page .= '<input type="submit" value="'.t('Return').'" />';
  $page .= '</form>';
  $page .= '</td>';

  $page .= '</tr>';
  $page .= '</table>';

  $page .= '<br/>';
  $page .= '<br/>';

  $page .= '</div>';
  print theme("page", $page);
}


/**
 * Render a page showing the picture full screen.
 * @return HTML
 */
function picture_view( $pid=0 ) {

  global $user;
  $page = '<div class="addressbook">';

  drupal_set_title(t('Addressbook view picture') );

  // Validate HTTP URL parameter
  if ( !check_number($pid) )
  {
     return hacker_warning();
  }

  // get fid from session scope
  $fid=$_SESSION["fid"];
  // get fid from session scope
  $mid=$_SESSION["mid"];

  $picture_delete = isset($_POST['picture_delete']) ? '1' : '0';
  $go_delete = isset($_POST['go_delete']) ? '1' : '0';

  // Check access rights
  $query  = 'SELECT uid, picture FROM {addressbook_picture} WHERE pid='.$pid;
  $queryResult = db_query($query);
  $tmp = db_fetch_object($queryResult);

  // If no data is found. Show anti hacking message
  if ($tmp==null) {
    return hacker_warning();
  }

  // Delete are you sure form
  if (($picture_delete=='1') && ($pid!='0') && ($go_delete=='0')) {
    $page .= '<br/>';
    $page .= t('Are you sure you want to delete the picture?');
    $page .= '<br/>';
    $page .= '<br/>';
    $page .= '<table align="left">';
    $page .= '<tr><td>';
    $page .= '<form action="'.url(URL_PICTURE_VIEW.'/'.$pid).'" method="POST">';
    $page .= '<input type="submit" name="go_delete" value="'.t('Yes').'" />';
    $page .= '<input type="hidden" name="picture_delete" />';
    $page .= '</form>';
    $page .= '</td><td>';
    $page .= '<form action="'.url(URL_PICTURE_VIEW.'/'.$pid).'" method="POST">';
    $page .= '<input type="submit" name="cancel_delete" value="'.t('No').'" />';
    $page .= '</form>';
    $page .= '</td></tr>';
    $page .= '</table>';
    $page .= '</div>';
    return $page;
  }

  // Delete selected picture from disk and database
  if (($picture_delete=='1') && ($pid!='0') && ($go_delete=='1')) {

     if (is_file(IMAGE_DIR.'/'.$tmp->picture)) {
       unlink(IMAGE_DIR.'/'.$tmp->picture);
     }
     if (is_file(THUMBNAILS_DIR.'/'.$tmp->picture)) {
       unlink(THUMBNAILS_DIR.'/'.$tmp->picture);
     }

     $query = 'DELETE FROM {addressbook_picture} WHERE pid='.$pid;
     $result = db_query($query);
     if ($result==1)
     {
       // Query succesfull
       watchdog('user', 'Picture '.$pid.' is deleted in the addressbook');

       $page .= '<td valign="top">';
       $page .= '<form action="'.url(URL_PICTURE_VIEW.'/'.$pid).'" method="POST">';
       $page .= '<input type="submit" name="picture_delete" value="'.t('Delete').'" />';
       $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
       $page .= '</form>';
       $page .= '</td>';

       if ($mid!='0') {
         if (check_access($tmp->uid)) {
           return member_edit($mid);
         }
         else {
           return member_view($mid);
         }
       }
       else {
          return family_view2($fid);
       }
     }
     else {
       // Query failed
       $page .= '<br/>';
       $page .= t('Failed to delete picture, try again');
       $page .= '<br/>';
       $page .= '<br/>';
       if ($mid!='0') {
         if (check_access($tmp->uid)) {
           $page .= '<form action="'.url(URL_MEMBER_EDIT.'/'.$mid).'" method="POST">';
         }
         else {
           $page .= '<form action="'.url(URL_MEMBER_VIEW.'/'.$mid).'" method="POST">';
         }
       }
       else {
          $page .= '<form action="'.url(URL_FAMILY_VIEW.'/'.$fid).'" method="POST">';
       }

       $page .= '<input type="submit" value="'.t('Return').'" />';
       $page .= '</form>';

       $page .= '</div>';
       return $page;
     }
  }

  // Show menu Bar
  $page .= '<br/>';
  $page .= '<table align="left">';
  $page .= '<tr>';

  if ( check_access($tmp->uid) ) {
    $page .= '<td valign="top">';
    $page .= '<form action="'.url(URL_PICTURE_VIEW.'/'.$pid).'" method="POST">';
    $page .= '<input type="submit" name="picture_delete" value="'.t('Delete').'" />';
    $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
    $page .= '</form>';
    $page .= '</td>';
  }

  $page .= '<td valign="top">';

  if ($mid==0)
  {
     $page .= '<form action="'.url(URL_FAMILY_VIEW.'/'.$fid).'" method="POST">';
  }
  else
  {
     if (check_access($tmp->uid)) {
        $page .= '<form action="'.url(URL_MEMBER_EDIT.'/'.$mid).'" method="POST">';
     }
     else {
        $page .= '<form action="'.url(URL_MEMBER_VIEW.'/'.$mid).'" method="POST">';
     }
  }
  $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
  $page .= '<input type="submit" value="'.t('Return').'" />';
  $page .= '</form>';
  $page .= '</td>';
  $page .= '</tr>';
  $page .= '</table>';

  $page .= '<br/>';
  $page .= '<br/>';

  if ($picture_delete=='0') {
    $filename=url(IMAGE_DIR.'/'.$tmp->picture);
    $filename=str_replace(array("?q="), "", $filename);
    $page.='<img src="'.$filename.'"/>';
  }
  $page .= '<br/>';

  $page .= '</div>';
  print theme("page", $page);
}

/**
 * Render a page for uploading a picture.
 * @return HTML
 */
function picture_edit( $mid=0 ) {

  global $user;
  $page = '<div class="addressbook">';

  drupal_set_title(t('Addressbook edit picture') );

  // Validate HTTP URL parameter
  if ( !check_number($mid) )
  {
     return hacker_warning();
  }

  //
  // Fetch data from HTTP request
  //
  $fid=$_POST['fid'];
  if ( !check_number($fid) )
  {
     return hacker_warning();
  }

  // Check access rights
  $query  = 'SELECT uid FROM {addressbook_family} WHERE fid='.$fid;
  $queryResult = db_query($query);
  $tmp = db_fetch_object($queryResult);

  // If no data is found. Show anti hacking message
  if ($tmp==null) {
    return hacker_warning();
  }

  if ( !check_access($tmp->uid) ) {
    // Deny access, no more clues.
    // Everything will be in the watchdog's URL for the administrator to check.
    drupal_access_denied();
    return;
  }

  // Fetch Image upload in a HTTP request
  if ($_FILES['uploadedfile']['name']!='') {
    if ( (strstr($_FILES['uploadedfile']['name'],'.jpg')) || (strstr( $_FILES['uploadedfile']['name'],'.JPG')) )
    {
      $error='0';
      if(!is_dir(IMAGE_DIR))
      {
        if( !mkdir(IMAGE_DIR) )
        {
          $page .= '<br/>';
          $page .= t('Creating image directory failed!');
          $page .= '<br/>';
          $error='1';
        }
      }
      $filename= date('YmdHis', time()).'.jpg';

       // Check dimensions of image
      $dimensions = getimagesize($_FILES['uploadedfile']['tmp_name']);
      $width  = $dimensions[0];
      $height = $dimensions[1];
      $resize = 0;

      // Limit picture 
      if ($width>$height)
      {
         $ratio = 800 / $width;
         if ($ratio < 1)
         {
            $width=800;
            $height=$height*$ratio;
            $resize = 1;
         }
      }
      else {
         $ratio = 600 / $width;
         if ($ratio < 1)
         {
            $width=600;
            $height=$height*$ratio;
            $resize = 1;
         }
      }

      $page .= '<br/>';

      // Resize uploaded picture
      if ( $resize == 1 )
      {
         if (!image_scale($_FILES['uploadedfile']['tmp_name'], file_create_path(IMAGE_DIR.'/'.$filename), $width, $height)) {
              $page .= '<br>';
              $page .= t('Unable to create image. Is Gd library active in apache php module?');
              $error='1';
              $page .= '<br>';
         }
         else
         {
            chmod(IMAGE_DIR.'/'.$filename, 0666);
         }
      }
      else
      {
        // Not resize needed, move file to storage place
        copy($_FILES['uploadedfile']['tmp_name'],IMAGE_DIR.'/'.$filename);
      }

      // Create thumbnails directory store
      if(!is_dir(THUMBNAILS_DIR))
      {
        if( !mkdir(THUMBNAILS_DIR) )
        {
          $page .= '<br/>';
          $page .= t('Creating image directory failed!');
          $page .= '<br/>';
          $error='1';
        }
      }

      $page .= '<br/>';

      $resize = 0;

      // Limit picture size on screen
      if ($width>$height)
      {
         $ratio  = 160 / $width;
         if ($ratio < 1)
         {
            $width=160;
            $height=$height*$ratio;
            $resize = 1;
         }
      }
      else
      {
         $ratio  = 120 / $width;
         if ($ratio < 1)
         {
            $width=120;
            $height=$height*$ratio;
            $resize = 1;
         }
      }

      // Create thumbnail picture
      // Resize uploaded picture
      if ( $resize == 1 )
      {
        if (!image_scale(IMAGE_DIR.'/'.$filename, file_create_path(THUMBNAILS_DIR.'/'.$filename), $width, $height)) {
          $page .= '<br>';
          $page .= t('434Unable to create thumbnails image. Is Gd library active in apache php module?');
          $error='1';
          $page .= '<br>';
        }
        else
        {
            chmod(THUMBNAILS_DIR.'/'.$filename, 0666);
        }
      }
      else
      {
        // Not resize needed, move file to storage place
        copy(IMAGE_DIR.'/'.$filename, THUMBNAILS_DIR.'/'.$filename);
      }

      if ($error=='0') {
        // Save picture in database
        $query  = 'INSERT INTO addressbook_picture (fid,mid,picture,uid,last_updated) VALUES (';
        $query .= '"'.$fid.'",';
        $query .= '"'.$mid.'",';
        $query .= '"'.$filename.'",';
        $query .= '"'.$user->uid.'",';
        $query .= 'SYSDATE() )';
        $result = db_query($query);
        if ($result==1)
        {
           // Query Succesfull
           watchdog('user', 'A picture is added to address '.$id.' in addressbook');

           if ($mid=='0')
           {
              // Return to family view page
              return family_view2($fid);
           }
           else {
              return member_edit($mid);
           }
        }
        else {
          // Query Failed
          $page .= '<br/>';
          $page .= t('Failed to add picture, try again!');
          $page .= '<br/>';
        }
      }
    }
    else {
      $page .= '<br/>';
      $page.=t('Only JPG image format is supported');
      $page .= '<br/>';
      $_FILES['uploadedfile']['name']='';
    }
  }

  if ($_FILES['uploadedfile']['name']=='') {
    $page .= '<form enctype="multipart/form-data" action="'.url(URL_PICTURE_EDIT.'/').$mid.'" method="POST">';
    $page .= '<br/>';
    $page .= '<input type="hidden" />';
    $page .= t('Choose a file to upload:').' <input name="uploadedfile" type="file" />';

    $page .= '<br/>';
    $page .= '<div id="mission">';
    $page .= t('Warning: Only the jpg picture format is supported.');
    $page .= '<br/>';
    $page .= t('Image size must not exceed ').ini_get('upload_max_filesize').'B';
    $page .= '<br/></div>';
    $page .= '<br/>';

    // Show menu Bar
    $page .= '<table>';
    $page .= '<tr><td>';
    $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
    $page .= '<input type="submit" value="'.t('Upload File').'" />';
    $page .= '</form>';
    $page .= '</td><td>';

    if ($mid=='0')
    {
      // Return to family view page
      $page .= '<form action="'.url(URL_FAMILY_VIEW.'/').$fid.'" method="POST">';
      $page .= '<input type="submit" value="'.t('Cancel').'" />';
      $page .= '</form>';
    }
    else {
      // Return to member view page
      $page .= '<form action="'.url(URL_MEMBER_EDIT.'/').$mid.'" method="POST">';
      $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
      $page .= '<input type="submit" value="'.t('Cancel').'" />';
      $page .= '</form>';
    }
    $page .= '</td></tr>';
    $page .= '</table>';
  }
  else
  {
    $page .= '<br/>';
    if ($mid=='0')
    {
      // Return to family view page
      $page .= '<form action="'.url(URL_FAMILY_VIEW.'/').$fid.'" method="POST">';
      $page .= '<input type="submit" value="'.t('Return').'" />';
      $page .= '</form>';
    }
    else {
      // Return to member view page
      $page .= '<form action="'.url(URL_MEMBER_EDIT.'/').$mid.'" method="POST">';
      $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
      $page .= '<input type="submit" value="'.t('Return').'" />';
      $page .= '</form>';
    }
  }

  $page .= '</div>';
  print theme("page", $page);
}

/**
 * process csv upload file.
 * @return errors in HTML format
 */
function process_csv_upload() {

  global $user;

  $page = '<div class="addressbook">';
  $page .= '<br/>';

  $line_counter=0;
  $csv_file_error=0;

  $myFile = file_directory_path().'/upload.csv';
  $fh = fopen($myFile, 'r');

  // Header line, skip it!
  $theData = fgets($fh);
  $line_counter++;

  $theData = fgets($fh);
  $line_counter++;
  while ($theData!='')
  {
    $line_error=0;

    // Split read line in elements
    $value=split( ',' ,$theData);
    $first_name=ucfirst($value[0]);
    $middle_name=$value[1];
    $last_name=ucfirst($value[2]);
    $street=ucfirst($value[3]);
    $zipcode=$value[4];
    $city=ucfirst($value[5]);
    $country=$value[6];
    $telephone=$value[7];
    $mobile=$value[8];
    $email=$value[9];
    list($day, $month, $year) = split('[/.-]', $value[10]);
    $birth_day=$year.'-'.$month.'-'.$day;

    $tmp=str_replace(array("~~"), "\r\n", $value[11]);
    $work=$tmp;

    $tmp=str_replace(array("~~"), "\r\n", $value[12]);
    $notes=$tmp;

    $tmp=str_replace(array("~~"), "\r\n", $value[13]);
    $active_roles=$tmp;

    $tmp=str_replace(array("~~"), "\r\n", $value[14]);
    $wanted_roles=$tmp;

    // Validate input. If error don't insert entry in database
    if ($first_name=='') {
       $page.=t('Line').' ['.$line_counter.'] '.t('First name empty').'<br/>';
       $line_error=1;
    }
    if ($last_name=='') {
       $page.=t('Line').' ['.$line_counter.'] '.t('Last name empty').'<br/>';
       $line_error=1;
    }
    if ($street=='') {
       $page.=t('Line').' ['.$line_counter.'] '.t('Street empty').'<br/>';
       $line_error=1;
    }
    if ($zipcode=='') {
       $page.=t('Line').' ['.$line_counter.'] '.t('Zipcode empty').'<br/>';
       $line_error=1;
    }
    if ($city=='') {
       $page.=t('Line').' ['.$line_counter.'] '.t('City empty').'<br/>';
       $line_error=1;
    }

    if (variable_get('addressbook_email_manitory',1)==1) {
      if (check_mail($email)) {
         $page.=t('Line').' ['.$line_counter.'] '.t('Email not valid').'['.$email.']<br/>';
         $line_error=1;
      }
    }

    // Show warning if validate fails
    if ($line_error==1) {
      $page.=t('Line').' ['.$line_counter.'] '.t('contains an error, entry is skipped').'<br/>';
    }
    else
    {
      // Input is ok. Insert / Update database with information

      // Check if family already exist, if not create new family.
      $query='SELECT fid, uid FROM {addressbook_family} WHERE street="'.$street.'" AND city="'.$city.'" AND country="'.$country.'"';
      $queryResult = db_query($query);
      $tmp = db_fetch_object($queryResult);

      if ($tmp!=null){
        // Update Family
        $fid=$tmp->fid;
        if (!update_family($middle_name, $last_name, $street, $zipcode, $city, $country, $telephone, $tmp->uid, $fid))
        {
           // Query failed
           $page.=t('Line ').'['.$line_counter.'] '.t('contains an error (Family update failed)').'<br/>';
           $line_error=1;
        }
      }
      else {
        // Insert Family
        if (!insert_family($middle_name, $last_name, $street, $zipcode, $city, $country, $telephone, 0))
        {
          // Query failed
          $page.=t('Line ').'['.$line_counter.'] '.t('contains an error (Family insert failed)').'<br/>';
          $line_error=1;
        }
        else
        {
          // Insert succesfull, get Family ID
          $query='SELECT fid FROM {addressbook_family} WHERE middle_name="'.$middle_name.'" AND last_name="'
            .$last_name.'" AND street="'.$street.'" AND city="'.$city.'"';
          $queryResult = db_query($query);
          $tmp = db_fetch_object($queryResult);
          $fid=$tmp->fid;
        }
      }

      // If family insert/update was succesful continue with member insert/update.
      if ( $line_error==0 )
      {
        // Check if member already exist
        $query='SELECT mid, uid FROM {addressbook_member} WHERE first_name="'.$first_name.'" AND middle_name="'
          .$middle_name.'" AND last_name="'.$last_name.'"';
        $queryResult = db_query($query);
        $tmp = db_fetch_object($queryResult);
        if ($tmp!=null){
          // Member existed
          $mid=$tmp->mid;
          if (!update_member($first_name, $middle_name, $last_name, $birth_day, $mobile, $email, $notes, $work, $active_roles, $wanted_roles, $tmp->uid, $fid, $mid)) {
            // Query failed
            $page.=t('Line ').'['.$line_counter.'] '.t('contains a error (Member update failed)').'<br/>';
            $line_error=1;
          }
        }
        else {
          if (!insert_member( $first_name, $middle_name, $last_name, $birth_day, $mobile, $email, $notes, $work, $active_roles, $wanted_roles, $fid, 0))
          {
            // Query failed
            $page.=t('Line ').'['.$line_counter.'] '.t('contains a error (Member insert failed)').'<br/>';
            $line_error=1;
          }
        }
      }
    }
    $line_counter++;
    $theData = fgets($fh);
  }
  fclose($fh);

  // Delete csv file
  unlink($myFile);

  $page .= '<br/>';
  $page .= t('CSV file processed!').'<br/>';
  $page .= '<br/>';
  $page .= '<form action="'.url(URL_FAMILY_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
  $page .= '<input type="submit" value="'.t('Return').'" />';
  $page .= '</form>';

  $page .= '</div>';
  return $page;
}

/**
 * Render a page for the csv addressbook upload
 * @return HTML
 */
function upload_csv() {

  global $user;
  $page = '<div class="addressbook">';

  drupal_set_title(t('Addressbook csv upload') );

  //only administrators can access this module
  if (!user_access('access administration pages')) {
    return drupal_access_denied();;
  }

   // Fetch Image upload in a HTTP request
  if ($_FILES['uploadedfile']['name']!='') {
    if ( (!strstr($_FILES['uploadedfile']['name'],'.csv')) && (!strstr($_FILES['uploadedfile']['name'],'.CSV')) )
    {
      $page .= '<br/>';
      $page.=t('Only CSV format is supported').'<br/>';
      $page .= '<br/>';

      // Return to family view page
      $page .= '<form action="'.url(URL_FAMILY_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
      $page .= '<input type="submit" value="'.t('Cancel').'" />';
      $page .= '</form>';

      $page .= '</div>';
      return $page;
    }
    else
    {
      if (move_uploaded_file($_FILES['uploadedfile']['tmp_name'],file_directory_path().'/upload.csv')) {
        watchdog('user', 'A csv file is uploaded to the addressbook');
        $page .= process_csv_upload();
      }
      else {
        // Query Failed
        $page .= '<br/>';
        $page .= t('Failed to save csv file, try again!').'<br/>';
        $page .= '<br/>';

        // Return to family view page
        $page .= '<form action="'.url(URL_FAMILY_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
        $page .= '<input type="submit" value="'.t('Cancel').'" />'.'<br/>';
        $page .= '</form>';

        $page .= '</div>';
        return $page;
      }
    }
  }

  if ($_FILES['uploadedfile']['name']=='') {
    $page .= '<form enctype="multipart/form-data" action="'.url(URL_UPLOAD_CSV).'" method="POST">';
    $page .= '<br/>';
    $page .= '<input type="hidden" />';
    $page .= t('Choose a csv file to upload:').' <input name="uploadedfile" type="file" />';

    $page .= '<br/>';
    $page .= '<div id="mission">';
    $page .= t('Warning: Only csv formatted files are supported.');
    $page .= '<br/>';
    $page .= t('File size must not exceed').ini_get('upload_max_filesize').'B';
    $page .= '<br/></div>';
    $page .= '<br/>';

    // Show menu Bar
    $page .= '<table>';
    $page .= '<tr><td>';
    $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
    $page .= '<input type="submit" value="'.t('Upload File').'" />';
    $page .= '</form>';
    $page .= '</td><td>';

    // Return to family view page
    $page .= '<form action="'.url(URL_FAMILY_LIST.'/'.$_SESSION["sort"]).'" method="POST">';
    $page .= '<input type="submit" value="'.t('Cancel').'" />';
    $page .= '</form>';

    $page .= '</td></tr>';
    $page .= '</table>';
  }

  $page .= '</div>';
  print theme("page", $page);
}

/**
 * Creat CSV file and start file transfer to web user.
 */
function download_csv() {

  $myFile = file_directory_path().'/addressbook.csv';

  drupal_set_title(t('Addressbook csv download'));

  //only administrators can access this module
  if (!user_access('access administration pages')) {
    return drupal_access_denied();;
  }

  $fp = fopen( $myFile, 'w');

  $query  = 'SELECT first_name, middle_name, last_name, mobile, email, birth_day, work, notes, active_roles, wanted_roles, ';
  $query .= '(SELECT street FROM {addressbook_family} WHERE fid=addressbook_member.fid) street, ';
  $query .= '(SELECT zipcode FROM {addressbook_family} WHERE fid=addressbook_member.fid) zipcode, ';
  $query .= '(SELECT city FROM {addressbook_family} WHERE fid=addressbook_member.fid) city, ';
  $query .= '(SELECT country FROM {addressbook_family} WHERE fid=addressbook_member.fid) country, ';
  $query .= '(SELECT telephone FROM {addressbook_family} WHERE fid=addressbook_member.fid) telephone ';
  $query .= 'FROM {addressbook_member} ORDER BY last_name DESC, middle_name, first_name';

  $queryResult = db_query($query);

  fwrite($fp,'FIRST_NAME,MIDDLE_NAME,LAST_NAME,STREET,ZIPCODE,CITY,COUNTRY,TELEPHONE,MOBILE,EMAIL,BIRTH_DAY,WORK,NOTES,ACTIVE_ROLES,WANTED_ROLES');
  fwrite($fp,"\r\n");

  // Show all found members
  while ($data = db_fetch_object($queryResult))
  {
    // Replace found comma with space
    $tmp=str_replace(array(","), " ", $data->first_name);
    fwrite($fp,$tmp);
    fwrite($fp,',');

    // Replace found comma with space
    $tmp=str_replace(array(","), " ", $data->middle_name);
    fwrite($fp,$tmp);
    fwrite($fp,',');

    // Replace found comma with space
    $tmp=str_replace(array(","), " ", $data->last_name);
    fwrite($fp,$tmp);
    fwrite($fp,',');

    // Replace found comma with space
    $tmp=str_replace(array(","), " ", $data->street);
    fwrite($fp,$tmp);
    fwrite($fp,',');

    // Replace found comma with space
    $tmp=str_replace(array(","), " ", $data->zipcode);
    fwrite($fp,$tmp);
    fwrite($fp,',');

    // Replace found comma with space
    $tmp=str_replace(array(","), " ", $data->city);
    fwrite($fp,$tmp);
    fwrite($fp,',');

    // Replace found comma with space
    $tmp=str_replace(array(","), " ", $data->country);
    fwrite($fp,$tmp);
    fwrite($fp,',');

    // Replace found comma with space
    $tmp=str_replace(array(","), " ", $data->telephone);
    fwrite($fp,$tmp);
    fwrite($fp,',');

    // Replace found comma with space
    $tmp=str_replace(array(","), " ", $data->mobile);
    fwrite($fp,$tmp);
    fwrite($fp,',');

    // Replace found comma with space
    $tmp=str_replace(array(","), " ", $data->email);
    fwrite($fp,$tmp);
    fwrite($fp,',');

    list($year, $month, $day) = split('[/.-]', $data->birth_day);
    fwrite($fp,$day.'-'.$month.'-'.$year);
    fwrite($fp,',');

    $tmp=str_replace(array("\r", "\n"), "~", $data->work);
    $tmp=str_replace(array(","), " ", $tmp);
    fwrite($fp,$tmp);
    fwrite($fp,',');

    $tmp=str_replace(array("\r", "\n"), "~", $data->notes);
    $tmp=str_replace(array(","), " ", $tmp);
    fwrite($fp,$tmp);
    fwrite($fp,',');

    $tmp=str_replace(array("\r", "\n"), "~", $data->active_roles);
    fwrite($fp,$tmp);
    fwrite($fp,',');

    $tmp=str_replace(array("\r", "\n"), "~", $data->wanted_roles);
    fwrite($fp,$tmp);
    fwrite($fp,"\r\n");
  }
  fclose($fp);

  header('HTTP/1.1 200 OK');
  header('Date: ' . date("D M j G:i:s T Y"));
  header('Last-Modified: ' . date("D M j G:i:s T Y"));
  header("Content-Type: application/force-download"); // changed to force download
  header("Content-Lenght: " . (string)(filesize($myFile)));
  header("Content-Transfer-Encoding: Binary"); // added
  header('Content-Disposition: attachment; filename="addressbook.csv"' );
  readfile($myFile);

  // Delete csv file
  unlink($myFile);
}

/**
 * Search in database
 * return found family or family member
 */
function general_search($search="") {

  $page = '<div class="addressbook">';

  drupal_set_title(t('Addressbook search'));

  // Fetch search parameter out HTTP request
  if ($search=='') $search=htmlentities($_POST['search']);
  // Set search value in session scope
  $_SESSION["search"]=$search;

  // Filter out garbage!
  $search=str_replace(array(',','"','(',')','[',']','%'), "", $search);
  $search=str_replace(array('+'), " ", $search);

  // If search string is empty return directly!
  if ($search=='')
  {
     return family_list($_SESSION["sort"]);
  }

  // Split search string in to tokens (We only us the first and last word of the search string).
  $value=split(' ',$search);
  $first_name=$value[0];
  $i=1;
  while ($value[$i]!='')
  {
    $last_name=$value[$i];
    $i++;
  }

  // Fetch member from database
  $query  = 'SELECT mid, fid FROM {addressbook_member} ';
  $query .= 'WHERE first_name LIKE "%'.$first_name.'%" AND last_name LIKE "%'.$last_name.'%"';
  $queryResult = db_query($query);

  // Show all found members
  $found_count=0;
  while ($data = db_fetch_object($queryResult))
  {
    $fid=$data->fid;
    $mid=$data->mid;
    $found_count++;
  }

  // If no family member is found try to search for matching family
  if ($found_count==0) {
    // If no lastname is added, firstname is lastname
    if ($last_name=='') {
      $last_name=$first_name;
      $first_name='';
    }

    // Fetch member from database
    $query  = 'SELECT fid FROM {addressbook_family} ';
    $query .= 'WHERE last_name LIKE "%'.$last_name.'%"';
    $queryResult = db_query($query);

    // Show all found members
    $found_count=0;
    while ($data = db_fetch_object($queryResult))
    {
      $fid=$data->fid;
      $mid=0;
      $found_count++;
    }
  }

  if ($found_count==0) {
     $page .= '<br/>';
     $page .= t('No information found').'<br/>';
     $page .= '<br/>';
     $page .= '<form action="'.url(URL_FAMILY_LIST).'" method="POST">';
     $page .= '<input type="submit" value="'.t('Return').'" />';
     $page .= '</form>';

     $page .= '</div>';
     return $page;
  }
  else {
    if ($found_count>1) {
      $page .= '<br/>';
      $page .= t('Multiple entries found. Please make the search string more specific.').'<br/>';
      $page .= '<br/>';
      $page .= '<form action="'.url(URL_FAMILY_LIST).'" method="POST">';
      $page .= '<input type="submit" value="'.t('Return').'" />';
      $page .= '</form>';

      $page .= '</div>';
      return $page;
    }
    else
    {
      if ($mid==0) {
         // Found family
         family_view2($fid);
      }
      else
      {
        // Found family member
        $_SESSION["fid"]=$fid;
        member_view($mid);
      }
    }
  }
}

function map_view() {

  $page = '<div class="addressbook">';

  drupal_set_title(t('Addressbook map view'));

  // Fetch search parameter out HTTP request
  $street=htmlentities($_POST['street']);
  $city=htmlentities($_POST['city']);
  $country=htmlentities($_POST['country']);
  $fid=$_POST['fid'];
  $mid=$_POST['mid'];

  drupal_set_html_head('');
  drupal_set_html_head('<script type=\'text/javascript\' src=\'http://api.map24.com/ajax/1.2/?init=default\'></script>');
  drupal_set_html_head('<script type=\'text/javascript\'>');
  drupal_set_html_head('var map = null;');

  drupal_set_html_head('function goMap24() {');
  drupal_set_html_head('var mrcContainer = new Map24.Webservices.Request.MapletRemoteControl(map);');

  drupal_set_html_head('map = Map24.Webservices.getMap24Application({');
  drupal_set_html_head('AppKey: "'.variable_get('addressbook_map_key', '').'",');
  drupal_set_html_head('MapArea: document.getElementById( "maparea" ),');
  drupal_set_html_head('Maptype: "JAVA",');
  drupal_set_html_head('MapWidth: 640,');
  drupal_set_html_head('MapHeight: 480,');
  drupal_set_html_head('MRC: mrcContainer');
  drupal_set_html_head('});');
  drupal_set_html_head('geocode(\''.$street.','.$city.','.$country.'\')');
  drupal_set_html_head('}');

  drupal_set_html_head('function geocode( addressString ){');
  drupal_set_html_head('map.Webservices.sendRequest(');
  drupal_set_html_head('new Map24.Webservices.Request.MapSearchFree(map, {');
  drupal_set_html_head('SearchText: addressString,');
  drupal_set_html_head('MaxNoOfAlternatives: 50');
  drupal_set_html_head('})');
  drupal_set_html_head(');');

  drupal_set_html_head('map.onMapSearchFree = function( event ){');
  drupal_set_html_head('var mrcContainer = new Map24.Webservices.Request.MapletRemoteControl( map );');
  drupal_set_html_head('var firstResult = event.Alternatives[0];');
  drupal_set_html_head('var lon = firstResult.Coordinate.Longitude;');
  drupal_set_html_head('var lat = firstResult.Coordinate.Latitude;');

  drupal_set_html_head('mrcContainer.push(');
  drupal_set_html_head('new Map24.Webservices.MRC.SetMapView({');
  drupal_set_html_head('Coordinates: new Map24.Coordinate( lon, lat ),');
  drupal_set_html_head('ClippingWidth: new Map24.Webservices.ClippingWidth(');
  drupal_set_html_head('{ MinimumWidth: 250 }');
  drupal_set_html_head(')');
  drupal_set_html_head('})');
  drupal_set_html_head(');');
  drupal_set_html_head('map.Webservices.sendRequest( mrcContainer );');
  drupal_set_html_head('}');
  drupal_set_html_head('}');

  drupal_set_html_head('</script>');

  $page.='<body onload=\'goMap24()\'>';

   // Show menu Bar
  $page .= '<br/>';
  $page .= '<table width="100%" border=0>';
  $page .= '<tr>';

  $page .= '<td valign="left">';
  $page .= '<b>'.t('Address: ').$street.', '.$city.', '.$country.'</b>';
  $page .= '</td>';

  $page .= '<td  valign="right">';
  $page.=' <input type="submit" value="'.t('Find Address').'" onclick="return geocode(\''.$street.','.$city.','.$country.'\')">';
  $page .= '</td>';

  $page .= '<td valign="right">';
  if ($mid=='') {
     $page .= '<form action="'.url(URL_FAMILY_VIEW.'/'.$fid).'" method="POST">';
  }
  else {
     $page .= '<form action="'.url(URL_MEMBER_VIEW.'/'.$mid).'" method="POST">';
     $page .= '<input type="hidden" name="fid" value="'.$fid.'" />';
  }
  $page .= '<input type="submit" name="commit" value="'.t('Return').'" />';
  $page .= '</form>';
  $page .= '</td>';

  $page .= '</tr>';
  $page .= '</table>';

  $page .= '<br/>';
  $page .= '<div id="maparea"></div>';
  $page .= '</body>';

  $page .= '</div>';
  print theme("page", $page);
}



